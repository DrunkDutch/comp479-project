{"url": "http://www.w3.org/TR/2003/WD-css3-color-20030214/", "content": "CSS3 module: Color \n CSS3 module: Color \n W3C Working Draft 14 February 2003 \n This version:\n http://www.w3.org/TR/2003/WD-css3-color-20030214 \n Latest version:\n http://www.w3.org/TR/css3-color \n Previous version:\n http://www.w3.org/TR/2002/WD-css3-color-20020418 \n Editors:\n Tantek \u00c7elik  ( Microsoft Corporation ) < tantekc@microsoft.com >\n Chris Lilley ( W3C ) < chris@w3.org >\n Additional Authors:\n Steven Pemberton ( CWI ) < steven.pemberton@cwi.nl >\n Brad Pettit ( Microsoft Corporation ) < bradp@microsoft.com >\n  Copyright \n\u00a9 2003  W3C \u00ae  ( MIT ,  ERCIM ,  Keio ),\nAll Rights Reserved. W3C  liability ,\n trademark ,\n document\nuse  and  software\nlicensing  rules apply.\n Abstract \n CSS (Cascading Style Sheets) is a language for describing the rendering of\nHTML and XML documents on screen, on paper, in speech, etc. To color elements\nin a document, it uses color related properties and respective values. This\ndraft describes the properties and values that are proposed for CSS\nlevel\u00a03. It includes and extends them from properties and values of CSS\nlevel\u00a02.\n Status of this document \n This document is a draft of one of the \"modules\" for the upcoming CSS3\nspecification. It not only describes the color related properties and values\nthat already exist in  CSS1  and  CSS2 , but also proposes new\nproperties and values for CSS3 as well. The Working Group doesn't expect that\nall implementations of CSS3 will implement all properties or values. Instead,\nthere will probably be a small number of variants of CSS3, so-called\n\"profiles\". For example, it may be that only the profile for 32-bit color\nuser agents will include all of the proposed color related properties and\nvalues.\n The current draft is the result of the merging of relevant parts of the\nfollowing Recommendations and Working Drafts, and the addition of some new\nfeatures.\n HTML 4.01  [HTML401] \n CSS 2.0  [CSS2] \n SVG 1.0  [SVG10] \n Color Profiles for CSS3 (22 June 1999)  [CSSICCPROF] \n User Interface for CSS3 (16 February 2000)  [CSSUI] \n This document is a working draft of the CSS working group which is part of\nthe  style activity  (see  summary ). This is a W3C  Last\nCall Working Draft . This is the second last call for this document,\nbecause, in response to comments on the previous draft, sufficient changes\nwere made (see  Changes  below) as to justify reissuing\na last call before advancing the document to candidate recommendation. The\nworking group requests that anyone who made comments on the previous last\ncall draft who believes their comments to still apply to please reiterate\ntheir comments on this draft. Last call means that the working group believes\nthat this specification is ready and therefore wishes this to be the last\ncall for comments. If the feedback is positive, the working group plans to\nsubmit it for consideration as a  W3C\nCandidate Recommendation . Comments can be sent until the  28th of\nFebruary, 2003. \n  Comments on, and discussions of this draft should take place on the ( archived ) public\nmailing list  www-style@w3.org  (see\n instructions ). W3C Members can\nalso send comments directly to the CSS working group.\n Patent disclosures relevant to CSS may be found on the Working Group's\npublic  patent disclosure page. \n To find the latest version of this working draft, please follow the\n\"Latest version\" link above, or visit the  list of W3C\nTechnical Reports. \n Changes \n To assist readers who are familiar with the previous draft of this\ndocument, this section outlines the major (non-editorial) changes that were\nmade, and the reasons for making them.\n Color names/values harmonized with SVG 1.0. There was substantial\nfeedback on the previous draft that requested that CSS3 Color normatively\nlist all the normative color names/values which are accepted by SVG 1.0. This\ndocument now contains the following additional named colors: darkgrey,\ndarkslategrey, dimgrey, lightgray, lightslategrey, slategrey. Note that this\nchange was also made in accordance with the TAG finding regarding  Consistency\nof Formatting Property Names, Values, and Semantics .\n Addition of the 'currentColor' keyword. SVG 1.0  introduced the\n'currentColor'  keyword. This specification adopts it as well.\n Optional <priority-index> dropped from 'opacity' property and thus\nharmonized with SVG 1.0. There was feedback indicating that this optional\nextension to the opacity property was not desired, nor would it necessarily\nbe the best way to solve the problem it was trying to address. A better way\nto enable authors to control the styling of elements dependent upon\n(potentially) hardware dependent support for opacity would be to extend Media\nQueries to enable style(sheet/rule)s based the presence/absence of such\nsupport. In addition the prose description of <alphavalue> has been\nharmonized with the SVG 1.0 description of the same.\n Table of contents \n 1.  Introduction \n 2.  Dependencies \n 3.  Color properties \n 3.1.  Foreground color:\nthe  'color'  property \n 3.1.1.  Gamma correction \n 3.2.  Transparency: the\n 'opacity'  property \n 3.3.  ICC Color Profile:\nthe  'color-profile'  property \n 3.4.  The ' rendering-intent ' property \n 3.5.  The\n'@color-profile' at-rule \n 4.  Color units \n 4.1.  HTML4 color keywords \n 4.2.  Numerical color\nvalues \n 4.2.1.  RGB color\nvalues \n 4.2.2.  RGBA color\nvalues \n 4.2.3.  'transparent'\ncolor keyword \n 4.2.4.  HSL color\nvalues \n 4.2.4.1.  HSL\nExamples \n 4.2.5.  HSLA color\nvalues \n 4.3.  SVG color\nkeywords \n 4.4.  'currentColor'\ncolor keyword \n 4.5.  CSS System\nColors \n 4.5.1.  CSS2 User\npreferences for colors \n 4.5.2.  CSS3 User\npreferences for hyperlink colors \n 4.5.3.  'flavor' system\ncolor \n 4.6.  Notes on using\ncolors \n 5.  Sample style sheet for\nHTML 4.0 \n 6.  Profiles \n 7.  Test Suite \n 8.\n Acknowledgments \n 9.  References \n 9.1.  Normative \n 9.2.  Informative \n Index \n Property index \n 1.  Introduction \n  CSS3 is a set of modules, divided up and profiled in order to simplify\nthe specification, and to allow implementors the flexibility of supporting\nthe particular modules appropriate for their implementations.\n  This module describes CSS properties which allow authors to specify the\nforeground color and opacity of an element. Additional properties allow\nspecification of the ICC color profile and rendering intent of image content.\nThis module also describes in detail the CSS <color> value type.\n 2.  Dependencies \n This CSS3 module depends on the following other CSS3 modules:\n CSS3 Syntax\n CSS3 Values and Units \n The following CSS3 modules depend on this CSS3 module:\n CSS3 Backgrounds \n CSS3 Borders \n CSS3 Box Model \n CSS3 Basic User Interface \n 3.  Color properties \n 3.1.  Foreground color: the\n 'color'  property \n Name: \n color \n Value: \n <color> | inherit | attr(<identifier>,color)\n Initial: \n depends on user agent\n Applies\u00a0to: \n all elements\n Inherited: \n yes\n Percentages: \n N/A\n Media: \n visual\n Computed value: \n  The computed value for HTML4 keywords, RGB hex values and SVG color\nkeywords is the equivalent six digit hex value. The computed value of the\nkeyword 'transparent' is rgba(0,0,0,0). If the color is specified using the\nattr() syntax then the computed value is the result of evaluating the\nattribute's value as a <color>. For all other values, the computed\nvalue is the specified value.\n This property describes the foreground color of an element's text content.\nIn addition it is used to provide a potential indirect value ( currentColor ) for any  other  properties that\naccept color values. If the 'currentColor' keyword is set on the 'color'\nproperty itself, it is treated as 'color:inherit' at parse time.\n  There are different ways to specify lime green:\n Example(s):\nem { color: lime }               /* predefined color name */\nem { color: rgb(0,255,0) }       /* RGB range 0-255   */\n <color> \n Color units are defined in a  following  section.\n attr(<identifier>,color) \n This function returns as a color the value of attribute\n<identifier> for the subject of the selector. The attribute value is\nparsed by the CSS processor as a <color>. If the subject of the\nselector doesn't have an attribute <identifier>, or if the value of\nattribute <identifier> is not a valid <color>, then the value is\ntreated as the keyword 'inherit'. The case-sensitivity of attribute names\ndepends on the document language.  Note.  In CSS3, it is not\npossible to refer to attribute values for other elements of the selector.\n Note.  The second parameter to the \"attr()\" function is the\nliteral symbol 'color'.\n  To refer to a 'text' attribute on a body element to set the color:\n Example(s):\nbody { color: attr(text,color); } /* use 'text' attribute */\n 3.1.1.  Gamma correction \n For information about gamma issues, please consult the Gamma Tutorial\nin the PNG specification ( [PNG1.0] ). \n  In the computation of gamma correction, UAs displaying on a  CRT  may assume an ideal CRT and ignore any\neffects on apparent gamma caused by dithering. That means the minimal\nhandling they need to do on current platforms is:\n  PC using MS-Windows\n  none\n  Unix using X11\n  none\n  Mac using QuickDraw\n  apply gamma 1.45  [ICC32] \n(ColorSync-savvy applications may simply pass the sRGB ICC profile to\nColorSync to perform correct color correction)\n  SGI using X\n  apply the gamma value from  /etc/config/system.glGammaVal  (the\ndefault value being 1.70; applications running on Irix 6.2 or above may\nsimply pass the sRGB ICC profile to the color management system)\n \"Applying gamma\" means that each of the three R, G and B must be converted\nto R'=R gamma , G'=G gamma , B'=B gamma , before\nbeing handed to the OS.\n This may rapidly be done by building a 256-element lookup table once per\nbrowser invocation thus:\nfor i := 0 to 255 do\n  raw := i / 255.0;\n  corr := pow (raw, gamma);\n  table[i] := trunc (0.5 + corr * 255.0)\nend\n which then avoids any need to do transcendental math per color attribute,\nfar less per pixel.\n 3.2.  Transparency: the  'opacity'  property \n  Opacity can be thought of conceptually as a postprocessing operation.\nConceptually, after the element is rendered into an RGBA offscreen image, the\nopacity setting specifies how to blend the offscreen rendering into the\ncurrent composite rendering.\n Name: \n opacity \n Value: \n <alphavalue> | inherit\n Initial: \n 1 none\n Applies\u00a0to: \n all elements\n Inherited: \n no\n Percentages: \n N/A\n Media: \n visual\n Computed value: \n The same as the specified value after clipping the <alphavalue> to\nthe range [0.0,1.0].\n <alphavalue> \n The uniform opacity setting to be applied across an entire object. Any\nvalues outside the range 0.0 (fully transparent) to 1.0 (fully opaque) will\nbe clamped to this range. If the object is a container element, then the\neffect is as if the contents of the container element were blended against\nthe current background using a mask where the value of each pixel of the mask\nis <alphavalue>.\n 3.3.  ICC Color Profile: the\n 'color-profile' \nproperty \n Name: \n color-profile \n Value: \n auto | sRGB | <name> | <uri> | inherit\n Initial: \n auto\n Applies\u00a0to: \n all elements\n Inherited: \n yes\n Percentages: \n N/A\n Media: \n visual\n Computed value: \n specified value\n This property permits the specification of a source color profile other\nthan the default.\n auto \n This is the default behavior. All colors are presumed to be defined in\nthe sRGB color space unless a more precise embedded profile is specified\nwithin content data. For images that do have a profile built into their data,\nthat profile is used. For images that do not have a profile, the sRGB profile\nis used so that the colors in these images can be kept \"in synch\" with the\ncolors specified in CSS and HTML.\n sRGB \n The source profile is assumed to be sRGB. This differs from\n auto  in that it overrides an embedded profile inside an\nimage.\n <name> \n A name corresponding to a defined color profile that is in the user\nagent's color profile description database. The user agent searches the color\nprofile description database for a  color profile\ndescription  entry whose name descriptor matches <name> and uses the\nlast matching entry that is found. If a match is found, the corresponding\nprofile overrides an embedded profile inside an image. If no match is found,\nthen the embedded profile inside the image is used.\n <uri> \n The location of a standard ICC profile resource. Just like specifying\n sRGB , it overrides an embedded profile.\n Example(s):\n/* use the specified profile, \n   even if the image contains an embedded profile */\nIMG { color-profile: url(\"http://example.com/profiles/eg.icm\") }\n 3.4.  The ' rendering-intent '\nproperty \n Name: \n rendering-intent \n Value: \n auto | perceptual | relative-colorimetric | saturation |\nabsolute-colorimetric | inherit\n Initial: \n auto\n Applies\u00a0to: \n all elements\n Inherited: \n yes\n Percentages: \n N/A\n Media: \n visual\n Computed value: \n specified value\n This property permits the specification of a color profile rendering\nintent other than the default. The behavior of values other than\n auto  and  inherit  are defined by the International Color\nConsortium standard  [ICC32] .\n auto \n This is the default behavior. The user-agent determines the best intent\nbased on the content type. For image content containing an embedded profile,\nit should be assumed that the intent specified within the profile is the\ndesired intent. Otherwise, the user agent should use the current profile\n(based on the  color-profile  style) and\nforce the intent, overriding any intent that may be stored in the profile\nitself.\n 3.5.  The '@color-profile'\nat-rule \n SVG 1.0 introduced the  @color-profile \nat-rule as a method for grouping the color-profile and rendering-intent\nproperties.\n The  @color-profile  rule can\nbe used to specify a color profile description. The general form is:\n@color-profile { <color-profile-description> }\n  where the <color-profile-description> has the form:\ndescriptor: value;\n[...]\ndescriptor: value;\n Each @color-profile rule specifies a value for every color profile\ndescriptor, either implicitly or explicitly. Those not given explicit values\nin the rule take the initial value listed with each descriptor in this\nspecification. These descriptors apply solely within the context of the\n@color-profile rule in which they are defined, and do not apply to document\nlanguage elements. Thus, there is no notion of which elements the descriptors\napply to, or whether the values are inherited by child elements.\n The following are the descriptors for a <color-profile-description>:\n 'name' \n(Descriptor) \n Values: \n <name>\n Initial: \n undefined\n Media: \n visual\n <name> \n The name which can be the value of the 'color-profile' property. Note\nthat if <name> is not provided, it will be impossible to reference the\ngiven color profile description. The name \"sRGB\" is predefined; any color\nprofile descriptions with <name> set to \"sRGB\" will be ignored. For\nconsistency with CSS lexical scanning and parsing rules, the keyword \"sRGB\"\nis case-insensitive; however, it is recommended that the mixed capitalization\n\"sRGB\" be used for consistency with common industry practice.\n 'src' \n(Descriptor) \n Values: \n sRGB | <local-profile> | <uri> | (<local-profile>\n<uri>)\n Initial: \n sRGB\n Media: \n visual\n sRGB \n The source profile is the  sRGB \ncolor space. For consistency with CSS lexical scanning and parsing rules, the\nkeyword \"sRGB\" is case-insensitive; however, it is recommended that the mixed\ncapitalization \"sRGB\" be used for consistency with common industry practice.\n <local-profile> \n The source profile is a locally-stored profile. The syntax for\n<local-profile> is:\n \"local(\" + <string> + \")\" \nwhere <string> is the profile's unique ID as specified by  International Color Consortium . (Note:\nProfile description fields do  not  represent a profile's unique ID.\nWith current ICC proposals, the profile's unique ID is an MD5-encoded value\nwithin the profile header.)\n <uri> \n The source profile is a URI reference to a color profile.\n ( <local-profile> <uri>) \n Two profiles are specified. If <local-profile> cannot be found on\nthe local system, then the <uri> is used.\n     'rendering-intent' \n(Descriptor) \n Values: \n auto | perceptual | relative-colorimetric | saturation |\nabsolute-colorimetric\n Initial: \n auto\n Media: \n visual\n See the description of the ' rendering-intent ' property.\n 4.  Color units \n A  <color>  is either a keyword\nor a numerical specification.\n 4.1.  HTML4 color keywords \n The list of HTML4 keyword color names is: aqua, black, blue, fuchsia,\ngray, green, lime, maroon, navy, olive, purple, red, silver, teal, white, and\nyellow. The color names are case-insensitive.\nColor names  and sRGB values \n Black = #000000\n Green = #008000\n Silver = #C0C0C0\n Lime = #00FF00\n Gray = #808080\n Olive = #808000\n White = #FFFFFF\n Yellow = #FFFF00\n Maroon = #800000\n Navy = #000080\n Red = #FF0000\n Blue = #0000FF\n Purple = #800080\n Teal = #008080\n Fuchsia = #FF00FF\n Aqua = #00FFFF\n Example(s):\nbody {color: black; background: white }\nh1 { color: maroon }\nh2 { color: olive }\n 4.2.  Numerical color values \n 4.2.1.  RGB color values \n The RGB color model is used in numerical color specifications. These\nexamples all specify the same color:\n Example(s):\nem { color: #f00 }              /* #rgb */\nem { color: #ff0000 }           /* #rrggbb */\nem { color: rgb(255,0,0) }      /* integer range 0 - 255 */\nem { color: rgb(100%, 0%, 0%) } /* float range 0.0% - 100.0% */\n  The format of an RGB value in hexadecimal notation is a '#' immediately\nfollowed by either three or six hexadecimal characters. The three-digit RGB\nnotation (#rgb) is converted into six-digit form (#rrggbb) by replicating\ndigits, not by adding zeros. For example, #fb0 expands to #ffbb00. This\nensures that white (#ffffff) can be specified with the short notation (#fff)\nand removes any dependencies on the color depth of the display.\n  The format of an RGB value in the functional notation is 'rgb(' followed\nby a comma-separated list of three numerical values (either three integer\nvalues or three percentage values) followed by ')'. The integer value 255\ncorresponds to 100%, and to F or FF in the hexadecimal notation:\nrgb(255,255,255) = rgb(100%,100%,100%) = #FFF. Whitespace characters are\nallowed around the numerical values.\n All RGB colors are specified in the sRGB color space (see  [SRGB] ). User agents may vary in the fidelity with\nwhich they represent these colors, but using sRGB provides an unambiguous and\nobjectively measurable definition of what the color should be, which can be\nrelated to international standards (see  [COLORIMETRY] ).\n Values outside the device gamut should be clipped: the red, green, and\nblue values must be changed to fall within the range supported by the device.\nFor a typical CRT monitor, whose device gamut is the same as sRGB, the three\nrules below are equivalent:\n Example(s):\nem { color: rgb(255,0,0) }       /* integer range 0 - 255 */\nem { color: rgb(300,0,0) }       /* clipped to rgb(255,0,0) */\nem { color: rgb(255,-10,0) }     /* clipped to rgb(255,0,0) */\nem { color: rgb(110%, 0%, 0%) }  /* clipped to rgb(100%,0%,0%) */\n Other devices, such as printers, have different gamuts to sRGB; some\ncolors outside the 0..255 sRGB range will be representable (inside the device\ngamut), while other colors inside the 0..255 sRGB range will be outside the\ndevice gamut and will thus be clipped.\n 4.2.2.  RGBA color values \n The RGB color model is extended in this specification to include 'alpha'\nto allow specification of the opacity of a color. These examples all specify\nthe same color:\n Example(s):\nem { color: rgb(255,0,0) }      /* integer range 0 - 255 */\nem { color: rgba(255,0,0,1)     /* the same, with explicit opacity of 1 */\nem { color: rgb(100%,0%,0%) }   /* float range 0.0% - 100.0% */\nem { color: rgba(100%,0%,0%,1) } /* the same, with explicit opacity of 1 */\n Unlike RGB values, there is no hexadecimal notation for an RGBA value.\n  The format of an RGBA value in the functional notation is 'rgba('\nfollowed by a comma-separated list of three numerical values (either three\ninteger values or three percentage values), followed by an  <alphavalue> , followed by ')'. The integer\nvalue 255 corresponds to 100%, rgb(255,255,255,0.8) =\nrgb(100%,100%,100%,0.8). Whitespace characters are allowed around the\nnumerical values.\n These examples specify new effects that are now possible with the new\nrgba() notation:\n Example(s):\np { color: rgba(0,0,255,0.5) }        /* semi-transparent solid blue */\np { color: rgba(100%, 50%, 0%, 0.1) } /* very transparent solid orange */\n Note.  If RGBA values are not supported by a\nuser agent, they should be treated like unrecognized values per the CSS\nforward compatibility parsing rules. RGBA values must NOT be treated as\nsimply an RGB value with the opacity ignored.\n 4.2.3.  'transparent' color\nkeyword \n CSS1 introduced the 'transparent' value for the background-color property.\nCSS2 allowed border-color to also accept the 'transparent' value. The Open\neBook(tm) Publication Structure 1.0.1  [OEB101]  extended the 'color' property to also accept\nthe 'transparent' keyword. CSS3 extends the color value to include the\n'transparent' keyword to allow its use with all properties that accept a\n<color> value. This simplifies the definition of those properties in\nCSS3.\n transparent\n Fully transparent. This keyword can be considered a shorthand for\nrgba(0,0,0,0) which is its computed value.\n 4.2.4.  HSL color values \n CSS3 adds numerical hue-saturation-lightness (HSL) colors as a complement\nto numerical RGB colors. It has been observed that RGB colors have the\nfollowing limitations:\n RGB is hardware-oriented: it reflects the use of CRTs.\n RGB is non-intuitive. People can learn how to use RGB, but actually by\ninternalizing how to translate hue, saturation and lightness, or something\nsimilar, to RGB.\n  There are several other color schemes possible. Advantages of HSL are\nthat it is symmetrical to lightness and darkness (which is not the case with\nHSV for example), and it is trivial to convert HSL to RGB.\n  HSL colors are encoding as a triple (hue, saturation, lightness). Hue is\nrepresented as an angle of the color circle (i.e. the rainbow represented in\na circle). This angle is so typically measured in degrees that the unit is\nimplicit in CSS; syntactically, only a <number> is given. By definition\nred=0=360, and the other colors are spread around the circle, so green=120,\nglue=240, etc. Saturation and lightness are represented as percentages. 100%\nis full saturation, and 0% is a shade of grey. 0% lightness is black, 100%\nlightness is white, and 50% lightness is 'normal'.\n So for instance:\n Example(s):\n* { color: hsl(0, 100%, 50%) }   /* red */\n* { color: hsl(120, 100%, 50%) } /* green */ \n* { color: hsl(120, 100%, 25%) } /* light green */ \n* { color: hsl(120, 100%, 75%) } /* dark green */ \n* { color: hsl(120, 50%, 50%) }  /* pastel green, and so on */\n  The advantage of HSL over RGB is that it is far more intuitive: you can\nguess at the colors you want, and then tweak. It is also easier to create\nsets of matching colors (by keeping the hue the same and varying the\nlightness/darkness, and saturation)\n  The algorithm to translate HSL to RGB is simple (here expressed in  ABC  which was used to generate\nthe tables.) In these algorithms, all three values (H, S and L) have been\nnormalized to fractions 0..1:\n    HOW TO RETURN hsl.to.rgb(h, s, l): \n       SELECT: \n\t  l<=0.5: PUT l*(s+1) IN m2\n\t  ELSE: PUT l+s-l*s IN m2\n       PUT l*2-m2 IN m1\n       PUT hue.to.rgb(m1, m2, h+1/3) IN r\n       PUT hue.to.rgb(m1, m2, h    ) IN g\n       PUT hue.to.rgb(m1, m2, h-1/3) IN b\n       RETURN (r, g, b)\n    HOW TO RETURN hue.to.rgb(m1, m2, h): \n       IF h<0: PUT h+1 IN h\n       IF h>1: PUT h-1 IN h\n       IF h*6<1: RETURN m1+(m2-m1)*h*6\n       IF h*2<1: RETURN m2\n       IF h*3<2: RETURN m1+(m2-m1)*(2/3-h)*6\n       RETURN m1\n 4.2.4.1.  HSL Examples \n  Each table below represents one hue. Twelve equally spaced colors (i.e.\nat 30\u00a1 intervals) have been chosen from the color circle: red, yellow,\ngreen, cyan, blue, magenta, with all the intermediate colors (the last is the\ncolor between magenta and red).\n  The X axis of each table represents the saturation (100%, 75%, 50%, 25%,\n0%).\n  The Y axis represents the lightness. 50% is 'normal'.\n 0\u00a1 Red\n Saturation\n 100%\n 75%\n 50%\n 25%\n 0%\n  100\n \u00a0\n \u00a0\n \u00a0\n \u00a0\n \u00a0\n  88\n \u00a0\n \u00a0\n \u00a0\n \u00a0\n \u00a0\n  75\n \u00a0\n \u00a0\n \u00a0\n \u00a0\n \u00a0\n  63\n \u00a0\n \u00a0\n \u00a0\n \u00a0\n \u00a0\n  50\n \u00a0\n \u00a0\n \u00a0\n \u00a0\n \u00a0\n  38\n \u00a0\n \u00a0\n \u00a0\n \u00a0\n \u00a0\n  25\n \u00a0\n \u00a0\n \u00a0\n \u00a0\n \u00a0\n  13\n \u00a0\n \u00a0\n \u00a0\n \u00a0\n \u00a0\n  0\n \u00a0\n \u00a0\n \u00a0\n \u00a0\n \u00a0\n 30\u00a1 Red-Yellow (=Orange)\n Saturation\n 100%\n 75%\n 50%\n 25%\n 0%\n  100\n \u00a0\n \u00a0\n \u00a0\n \u00a0\n \u00a0\n  88\n \u00a0\n \u00a0\n \u00a0\n \u00a0\n \u00a0\n  75\n \u00a0\n \u00a0\n \u00a0\n \u00a0\n \u00a0\n  63\n \u00a0\n \u00a0\n \u00a0\n \u00a0\n \u00a0\n  50\n \u00a0\n \u00a0\n \u00a0\n \u00a0\n \u00a0\n  38\n \u00a0\n \u00a0\n \u00a0\n \u00a0\n \u00a0\n  25\n \u00a0\n \u00a0\n \u00a0\n \u00a0\n \u00a0\n  13\n \u00a0\n \u00a0\n \u00a0\n \u00a0\n \u00a0\n  0\n \u00a0\n \u00a0\n \u00a0\n \u00a0\n \u00a0\n 60\u00a1 Yellow\n Saturation\n 100%\n 75%\n 50%\n 25%\n 0%\n  100\n \u00a0\n \u00a0\n \u00a0\n \u00a0\n \u00a0\n  88\n \u00a0\n \u00a0\n \u00a0\n \u00a0\n \u00a0\n  75\n \u00a0\n \u00a0\n \u00a0\n \u00a0\n \u00a0\n  63\n \u00a0\n \u00a0\n \u00a0\n \u00a0\n \u00a0\n  50\n \u00a0\n \u00a0\n \u00a0\n \u00a0\n \u00a0\n  38\n \u00a0\n \u00a0\n \u00a0\n \u00a0\n \u00a0\n  25\n \u00a0\n \u00a0\n \u00a0\n \u00a0\n \u00a0\n  13\n \u00a0\n \u00a0\n \u00a0\n \u00a0\n \u00a0\n  0\n \u00a0\n \u00a0\n \u00a0\n \u00a0\n \u00a0\n 90\u00a1 Yellow-Green\n Saturation\n 100%\n 75%\n 50%\n 25%\n 0%\n  100\n \u00a0\n \u00a0\n \u00a0\n \u00a0\n \u00a0\n  88\n \u00a0\n \u00a0\n \u00a0\n \u00a0\n \u00a0\n  75\n \u00a0\n \u00a0\n \u00a0\n \u00a0\n \u00a0\n  63\n \u00a0\n \u00a0\n \u00a0\n \u00a0\n \u00a0\n  50\n \u00a0\n \u00a0\n \u00a0\n \u00a0\n \u00a0\n  38\n \u00a0\n \u00a0\n \u00a0\n \u00a0\n \u00a0\n  25\n \u00a0\n \u00a0\n \u00a0\n \u00a0\n \u00a0\n  13\n \u00a0\n \u00a0\n \u00a0\n \u00a0\n \u00a0\n  0\n \u00a0\n \u00a0\n \u00a0\n \u00a0\n \u00a0\n 120\u00a1 Green\n Saturation\n 100%\n 75%\n 50%\n 25%\n 0%\n  100\n \u00a0\n \u00a0\n \u00a0\n \u00a0\n \u00a0\n  88\n \u00a0\n \u00a0\n \u00a0\n \u00a0\n \u00a0\n  75\n \u00a0\n \u00a0\n \u00a0\n \u00a0\n \u00a0\n  63\n \u00a0\n \u00a0\n \u00a0\n \u00a0\n \u00a0\n  50\n \u00a0\n \u00a0\n \u00a0\n \u00a0\n \u00a0\n  38\n \u00a0\n \u00a0\n \u00a0\n \u00a0\n \u00a0\n  25\n \u00a0\n \u00a0\n \u00a0\n \u00a0\n \u00a0\n  13\n \u00a0\n \u00a0\n \u00a0\n \u00a0\n \u00a0\n  0\n \u00a0\n \u00a0\n \u00a0\n \u00a0\n \u00a0\n 150\u00a1 Green-Cyan\n Saturation\n 100%\n 75%\n 50%\n 25%\n 0%\n  100\n \u00a0\n \u00a0\n \u00a0\n \u00a0\n \u00a0\n  88\n \u00a0\n \u00a0\n \u00a0\n \u00a0\n \u00a0\n  75\n \u00a0\n \u00a0\n \u00a0\n \u00a0\n \u00a0\n  63\n \u00a0\n \u00a0\n \u00a0\n \u00a0\n \u00a0\n  50\n \u00a0\n \u00a0\n \u00a0\n \u00a0\n \u00a0\n  38\n \u00a0\n \u00a0\n \u00a0\n \u00a0\n \u00a0\n  25\n \u00a0\n \u00a0\n \u00a0\n \u00a0\n \u00a0\n  13\n \u00a0\n \u00a0\n \u00a0\n \u00a0\n \u00a0\n  0\n \u00a0\n \u00a0\n \u00a0\n \u00a0\n \u00a0\n 180\u00a1 Cyan\n Saturation\n 100%\n 75%\n 50%\n 25%\n 0%\n  100\n \u00a0\n \u00a0\n \u00a0\n \u00a0\n \u00a0\n  88\n \u00a0\n \u00a0\n \u00a0\n \u00a0\n \u00a0\n  75\n \u00a0\n \u00a0\n \u00a0\n \u00a0\n \u00a0\n  63\n \u00a0\n \u00a0\n \u00a0\n \u00a0\n \u00a0\n  50\n \u00a0\n \u00a0\n \u00a0\n \u00a0\n \u00a0\n  38\n \u00a0\n \u00a0\n \u00a0\n \u00a0\n \u00a0\n  25\n \u00a0\n \u00a0\n \u00a0\n \u00a0\n \u00a0\n  13\n \u00a0\n \u00a0\n \u00a0\n \u00a0\n \u00a0\n  0\n \u00a0\n \u00a0\n \u00a0\n \u00a0\n \u00a0\n 210\u00a1 Cyan-Blue\n Saturation\n 100%\n 75%\n 50%\n 25%\n 0%\n  100\n \u00a0\n \u00a0\n \u00a0\n \u00a0\n \u00a0\n  88\n \u00a0\n \u00a0\n \u00a0\n \u00a0\n \u00a0\n  75\n \u00a0\n \u00a0\n \u00a0\n \u00a0\n \u00a0\n  63\n \u00a0\n \u00a0\n \u00a0\n \u00a0\n \u00a0\n  50\n \u00a0\n \u00a0\n \u00a0\n \u00a0\n \u00a0\n  38\n \u00a0\n \u00a0\n \u00a0\n \u00a0\n \u00a0\n  25\n \u00a0\n \u00a0\n \u00a0\n \u00a0\n \u00a0\n  13\n \u00a0\n \u00a0\n \u00a0\n \u00a0\n \u00a0\n  0\n \u00a0\n \u00a0\n \u00a0\n \u00a0\n \u00a0\n 240\u00a1 Blue\n Saturation\n 100%\n 75%\n 50%\n 25%\n 0%\n  100\n \u00a0\n \u00a0\n \u00a0\n \u00a0\n \u00a0\n  88\n \u00a0\n \u00a0\n \u00a0\n \u00a0\n \u00a0\n  75\n \u00a0\n \u00a0\n \u00a0\n \u00a0\n \u00a0\n  63\n \u00a0\n \u00a0\n \u00a0\n \u00a0\n \u00a0\n  50\n \u00a0\n \u00a0\n \u00a0\n \u00a0\n \u00a0\n  38\n \u00a0\n \u00a0\n \u00a0\n \u00a0\n \u00a0\n  25\n \u00a0\n \u00a0\n \u00a0\n \u00a0\n \u00a0\n  13\n \u00a0\n \u00a0\n \u00a0\n \u00a0\n \u00a0\n  0\n \u00a0\n \u00a0\n \u00a0\n \u00a0\n \u00a0\n 270\u00a1 Blue-Magenta\n Saturation\n 100%\n 75%\n 50%\n 25%\n 0%\n  100\n \u00a0\n \u00a0\n \u00a0\n \u00a0\n \u00a0\n  88\n \u00a0\n \u00a0\n \u00a0\n \u00a0\n \u00a0\n  75\n \u00a0\n \u00a0\n \u00a0\n \u00a0\n \u00a0\n  63\n \u00a0\n \u00a0\n \u00a0\n \u00a0\n \u00a0\n  50\n \u00a0\n \u00a0\n \u00a0\n \u00a0\n \u00a0\n  38\n \u00a0\n \u00a0\n \u00a0\n \u00a0\n \u00a0\n  25\n \u00a0\n \u00a0\n \u00a0\n \u00a0\n \u00a0\n  13\n \u00a0\n \u00a0\n \u00a0\n \u00a0\n \u00a0\n  0\n \u00a0\n \u00a0\n \u00a0\n \u00a0\n \u00a0\n 300\u00a1 Magenta\n Saturation\n 100%\n 75%\n 50%\n 25%\n 0%\n  100\n \u00a0\n \u00a0\n \u00a0\n \u00a0\n \u00a0\n  88\n \u00a0\n \u00a0\n \u00a0\n \u00a0\n \u00a0\n  75\n \u00a0\n \u00a0\n \u00a0\n \u00a0\n \u00a0\n  63\n \u00a0\n \u00a0\n \u00a0\n \u00a0\n \u00a0\n  50\n \u00a0\n \u00a0\n \u00a0\n \u00a0\n \u00a0\n  38\n \u00a0\n \u00a0\n \u00a0\n \u00a0\n \u00a0\n  25\n \u00a0\n \u00a0\n \u00a0\n \u00a0\n \u00a0\n  13\n \u00a0\n \u00a0\n \u00a0\n \u00a0\n \u00a0\n  0\n \u00a0\n \u00a0\n \u00a0\n \u00a0\n \u00a0\n 330\u00a1 Magenta-Red\n Saturation\n 100%\n 75%\n 50%\n 25%\n 0%\n  100\n \u00a0\n \u00a0\n \u00a0\n \u00a0\n \u00a0\n  88\n \u00a0\n \u00a0\n \u00a0\n \u00a0\n \u00a0\n  75\n \u00a0\n \u00a0\n \u00a0\n \u00a0\n \u00a0\n  63\n \u00a0\n \u00a0\n \u00a0\n \u00a0\n \u00a0\n  50\n \u00a0\n \u00a0\n \u00a0\n \u00a0\n \u00a0\n  38\n \u00a0\n \u00a0\n \u00a0\n \u00a0\n \u00a0\n  25\n \u00a0\n \u00a0\n \u00a0\n \u00a0\n \u00a0\n  13\n \u00a0\n \u00a0\n \u00a0\n \u00a0\n \u00a0\n  0\n \u00a0\n \u00a0\n \u00a0\n \u00a0\n \u00a0\n 4.2.5.\n HSLA color values \n Just as the 'rgb()' functional notation has the 'rgba()' alpha\ncounterpart, the 'hsl()' functional notation has the 'hsla()' alpha\ncounterpart. These examples specify the same color:\n Example(s):\nem { color: hsl(120, 100%, 50%) }     /* green */\nem { color: hsla(120, 100%, 50%, 1) } /* the same, with explicit opacity of 1 */\n The format of an HSLA color value in the functional notation is 'hsla('\nfollowed by the hue in degrees, saturation and lightness as a percentage, and\nan  <alphavalue> , followed by ')'.\nWhitespace characters are allowed around the numerical values.\n These examples specify new effects that are now possible with the new\nhsla() notation:\n Example(s):\np { color: hsla(240, 100%, 50%, 0.5) } /* semi-transparent solid blue */\np { color: hsla(30, 100%, 50%, 0.1) }  /* very transparent solid orange */\n 4.3.  SVG color keywords \n The table below provides a list of the X11 colors  [X11COLORS]  supported by popular browsers with the\naddition of gray/grey variants from SVG 1.0. The resulting list is precisely\nthe same as the  SVG 1.0 color\nkeyword names . The two color swatches on the left illustrate setting the\nbackground color of a table cell in two ways: The first column uses the named\ncolor value, and the second column uses the respective numeric color value.\n Named \n Numeric \n Color\u00a0Name \n Hex\u00a0RGB \n Decimal \n \u00a0\n \u00a0\n AliceBlue\n #F0F8FF\n 240,248,255\n \u00a0\n \u00a0\n AntiqueWhite\n #FAEBD7\n 250,235,215\n \u00a0\n \u00a0\n Aqua\n #00FFFF\n 0,255,255\n \u00a0\n \u00a0\n Aquamarine\n #7FFFD4\n 127,255,212\n \u00a0\n \u00a0\n Azure\n #F0FFFF\n 240,255,255\n \u00a0\n \u00a0\n Beige\n #F5F5DC\n 245,245,220\n \u00a0\n \u00a0\n Bisque\n #FFE4C4\n 255,228,196\n \u00a0\n \u00a0\n Black\n #000000\n 0,0,0\n \u00a0\n \u00a0\n BlanchedAlmond\n #FFEBCD\n 255,235,205\n \u00a0\n \u00a0\n Blue\n #0000FF\n 0,0,255\n \u00a0\n \u00a0\n BlueViolet\n #8A2BE2\n 138,43,226\n \u00a0\n \u00a0\n Brown\n #A52A2A\n 165,42,42\n \u00a0\n \u00a0\n BurlyWood\n #DEB887\n 222,184,135\n \u00a0\n \u00a0\n CadetBlue\n #5F9EA0\n 95,158,160\n \u00a0\n \u00a0\n Chartreuse\n #7FFF00\n 127,255,0\n \u00a0\n \u00a0\n Chocolate\n #D2691E\n 210,105,30\n \u00a0\n \u00a0\n Coral\n #FF7F50\n 255,127,80\n \u00a0\n \u00a0\n CornflowerBlue\n #6495ED\n 100,149,237\n \u00a0\n \u00a0\n Cornsilk\n #FFF8DC\n 255,248,220\n \u00a0\n \u00a0\n Crimson\n #DC143C\n 220,20,60\n \u00a0\n \u00a0\n Cyan\n #00FFFF\n 0,255,255\n \u00a0\n \u00a0\n DarkBlue\n #00008B\n 0,0,139\n \u00a0\n \u00a0\n DarkCyan\n #008B8B\n 0,139,139\n \u00a0\n \u00a0\n DarkGoldenrod\n #B8860B\n 184,134,11\n \u00a0\n \u00a0\n DarkGray\n #A9A9A9\n 169,169,169\n \u00a0\n \u00a0\n DarkGreen\n #006400\n 0,100,0\n \u00a0\n \u00a0\n DarkGrey\n #A9A9A9\n 169,169,169\n \u00a0\n \u00a0\n DarkKhaki\n #BDB76B\n 189,183,107\n \u00a0\n \u00a0\n DarkMagenta\n #8B008B\n 139,0,139\n \u00a0\n \u00a0\n DarkOliveGreen\n #556B2F\n 85,107,47\n \u00a0\n \u00a0\n DarkOrange\n #FF8C00\n 255,140,0\n \u00a0\n \u00a0\n DarkOrchid\n #9932CC\n 153,50,204\n \u00a0\n \u00a0\n DarkRed\n #8B0000\n 139,0,0\n \u00a0\n \u00a0\n DarkSalmon\n #E9967A\n 233,150,122\n \u00a0\n \u00a0\n DarkSeaGreen\n #8FBC8F\n 143,188,143\n \u00a0\n \u00a0\n DarkSlateBlue\n #483D8B\n 72,61,139\n \u00a0\n \u00a0\n DarkSlateGray\n #2F4F4F\n 47,79,79\n \u00a0\n \u00a0\n DarkSlateGrey\n #2F4F4F\n 47,79,79\n \u00a0\n \u00a0\n DarkTurquoise\n #00CED1\n 0,206,209\n \u00a0\n \u00a0\n DarkViolet\n #9400D3\n 148,0,211\n \u00a0\n \u00a0\n DeepPink\n #FF1493\n 255,20,147\n \u00a0\n \u00a0\n DeepSkyBlue\n #00BFFF\n 0,191,255\n \u00a0\n \u00a0\n DimGray\n #696969\n 105,105,105\n \u00a0\n \u00a0\n DimGrey\n #696969\n 105,105,105\n \u00a0\n \u00a0\n DodgerBlue\n #1E90FF\n 30,144,255\n \u00a0\n \u00a0\n FireBrick\n #B22222\n 178,34,34\n \u00a0\n \u00a0\n FloralWhite\n #FFFAF0\n 255,250,240\n \u00a0\n \u00a0\n ForestGreen\n #228B22\n 34,139,34\n \u00a0\n \u00a0\n Fuchsia\n #FF00FF\n 255,0,255\n \u00a0\n \u00a0\n Gainsboro\n #DCDCDC\n 220,220,220\n \u00a0\n \u00a0\n GhostWhite\n #F8F8FF\n 248,248,255\n \u00a0\n \u00a0\n Gold\n #FFD700\n 255,215,0\n \u00a0\n \u00a0\n Goldenrod\n #DAA520\n 218,165,32\n \u00a0\n \u00a0\n Gray\n #808080\n 128,128,128\n \u00a0\n \u00a0\n Green\n #008000\n 0,128,0\n \u00a0\n \u00a0\n GreenYellow\n #ADFF2F\n 173,255,47\n \u00a0\n \u00a0\n Grey\n #808080\n 128,128,128\n \u00a0\n \u00a0\n Honeydew\n #F0FFF0\n 240,255,240\n \u00a0\n \u00a0\n HotPink\n #FF69B4\n 255,105,180\n \u00a0\n \u00a0\n IndianRed\n #CD5C5C\n 205,92,92\n \u00a0\n \u00a0\n Indigo\n #4B0082\n 75,0,130\n \u00a0\n \u00a0\n Ivory\n #FFFFF0\n 255,255,240\n \u00a0\n \u00a0\n Khaki\n #F0E68C\n 240,230,140\n \u00a0\n \u00a0\n Lavender\n #E6E6FA\n 230,230,250\n \u00a0\n \u00a0\n LavenderBlush\n #FFF0F5\n 255,240,245\n \u00a0\n \u00a0\n LawnGreen\n #7CFC00\n 124,252,0\n \u00a0\n \u00a0\n LemonChiffon\n #FFFACD\n 255,250,205\n \u00a0\n \u00a0\n LightBlue\n #ADD8E6\n 173,216,230\n \u00a0\n \u00a0\n LightCoral\n #F08080\n 240,128,128\n \u00a0\n \u00a0\n LightCyan\n #E0FFFF\n 224,255,255\n \u00a0\n \u00a0\n LightGoldenrodYellow\n #FAFAD2\n 250,250,210\n \u00a0\n \u00a0\n LightGray\n #D3D3D3\n 211,211,211\n \u00a0\n \u00a0\n LightGreen\n #90EE90\n 144,238,144\n \u00a0\n \u00a0\n LightGrey\n #D3D3D3\n 211,211,211\n \u00a0\n \u00a0\n LightPink\n #FFB6C1\n 255,182,193\n \u00a0\n \u00a0\n LightSalmon\n #FFA07A\n 255,160,122\n \u00a0\n \u00a0\n LightSeaGreen\n #20B2AA\n 32,178,170\n \u00a0\n \u00a0\n LightSkyBlue\n #87CEFA\n 135,206,250\n \u00a0\n \u00a0\n LightSlateGray\n #778899\n 119,136,153\n \u00a0\n \u00a0\n LightSlateGrey\n #778899\n 119,136,153\n \u00a0\n \u00a0\n LightSteelBlue\n #B0C4DE\n 176,196,222\n \u00a0\n \u00a0\n LightYellow\n #FFFFE0\n 255,255,224\n \u00a0\n \u00a0\n Lime\n #00FF00\n 0,255,0\n \u00a0\n \u00a0\n LimeGreen\n #32CD32\n 50,205,50\n \u00a0\n \u00a0\n Linen\n #FAF0E6\n 250,240,230\n \u00a0\n \u00a0\n Magenta\n #FF00FF\n 255,0,255\n \u00a0\n \u00a0\n Maroon\n #800000\n 128,0,0\n \u00a0\n \u00a0\n MediumAquamarine\n #66CDAA\n 102,205,170\n \u00a0\n \u00a0\n MediumBlue\n #0000CD\n 0,0,205\n \u00a0\n \u00a0\n MediumOrchid\n #BA55D3\n 186,85,211\n \u00a0\n \u00a0\n MediumPurple\n #9370DB\n 147,112,219\n \u00a0\n \u00a0\n MediumSeaGreen\n #3CB371\n 60,179,113\n \u00a0\n \u00a0\n MediumSlateBlue\n #7B68EE\n 123,104,238\n \u00a0\n \u00a0\n MediumSpringGreen\n #00FA9A\n 0,250,154\n \u00a0\n \u00a0\n MediumTurquoise\n #48D1CC\n 72,209,204\n \u00a0\n \u00a0\n MediumVioletRed\n #C71585\n 199,21,133\n \u00a0\n \u00a0\n MidnightBlue\n #191970\n 25,25,112\n \u00a0\n \u00a0\n MintCream\n #F5FFFA\n 245,255,250\n \u00a0\n \u00a0\n MistyRose\n #FFE4E1\n 255,228,225\n \u00a0\n \u00a0\n Moccasin\n #FFE4B5\n 255,228,181\n \u00a0\n \u00a0\n NavajoWhite\n #FFDEAD\n 255,222,173\n \u00a0\n \u00a0\n Navy\n #000080\n 0,0,128\n \u00a0\n \u00a0\n OldLace\n #FDF5E6\n 253,245,230\n \u00a0\n \u00a0\n Olive\n #808000\n 128,128,0\n \u00a0\n \u00a0\n OliveDrab\n #6B8E23\n 107,142,35\n \u00a0\n \u00a0\n Orange\n #FFA500\n 255,165,0\n \u00a0\n \u00a0\n OrangeRed\n #FF4500\n 255,69,0\n \u00a0\n \u00a0\n Orchid\n #DA70D6\n 218,112,214\n \u00a0\n \u00a0\n PaleGoldenrod\n #EEE8AA\n 238,232,170\n \u00a0\n \u00a0\n PaleGreen\n #98FB98\n 152,251,152\n \u00a0\n \u00a0\n PaleTurquoise\n #AFEEEE\n 175,238,238\n \u00a0\n \u00a0\n PaleVioletRed\n #DB7093\n 219,112,147\n \u00a0\n \u00a0\n PapayaWhip\n #FFEFD5\n 255,239,213\n \u00a0\n \u00a0\n PeachPuff\n #FFDAB9\n 255,218,185\n \u00a0\n \u00a0\n Peru\n #CD853F\n 205,133,63\n \u00a0\n \u00a0\n Pink\n #FFC0CB\n 255,192,203\n \u00a0\n \u00a0\n Plum\n #DDA0DD\n 221,160,221\n \u00a0\n \u00a0\n PowderBlue\n #B0E0E6\n 176,224,230\n \u00a0\n \u00a0\n Purple\n #800080\n 128,0,128\n \u00a0\n \u00a0\n Red\n #FF0000\n 255,0,0\n \u00a0\n \u00a0\n RosyBrown\n #BC8F8F\n 188,143,143\n \u00a0\n \u00a0\n RoyalBlue\n #4169E1\n 65,105,225\n \u00a0\n \u00a0\n SaddleBrown\n #8B4513\n 139,69,19\n \u00a0\n \u00a0\n Salmon\n #FA8072\n 250,128,114\n \u00a0\n \u00a0\n SandyBrown\n #F4A460\n 244,164,96\n \u00a0\n \u00a0\n SeaGreen\n #2E8B57\n 46,139,87\n \u00a0\n \u00a0\n Seashell\n #FFF5EE\n 255,245,238\n \u00a0\n \u00a0\n Sienna\n #A0522D\n 160,82,45\n \u00a0\n \u00a0\n Silver\n #C0C0C0\n 192,192,192\n \u00a0\n \u00a0\n SkyBlue\n #87CEEB\n 135,206,235\n \u00a0\n \u00a0\n SlateBlue\n #6A5ACD\n 106,90,205\n \u00a0\n \u00a0\n SlateGray\n #708090\n 112,128,144\n \u00a0\n \u00a0\n SlateGrey\n #708090\n 112,128,144\n \u00a0\n \u00a0\n Snow\n #FFFAFA\n 255,250,250\n \u00a0\n \u00a0\n SpringGreen\n #00FF7F\n 0,255,127\n \u00a0\n \u00a0\n SteelBlue\n #4682B4\n 70,130,180\n \u00a0\n \u00a0\n Tan\n #D2B48C\n 210,180,140\n \u00a0\n \u00a0\n Teal\n #008080\n 0,128,128\n \u00a0\n \u00a0\n Thistle\n #D8BFD8\n 216,191,216\n \u00a0\n \u00a0\n Tomato\n #FF6347\n 255,99,71\n \u00a0\n \u00a0\n Turquoise\n #40E0D0\n 64,224,208\n \u00a0\n \u00a0\n Violet\n #EE82EE\n 238,130,238\n \u00a0\n \u00a0\n Wheat\n #F5DEB3\n 245,222,179\n \u00a0\n \u00a0\n White\n #FFFFFF\n 255,255,255\n \u00a0\n \u00a0\n WhiteSmoke\n #F5F5F5\n 245,245,245\n \u00a0\n \u00a0\n Yellow\n #FFFF00\n 255,255,0\n \u00a0\n \u00a0\n YellowGreen\n #9ACD32\n 154,205,50\n 4.4.  'currentColor' color\nkeyword \n CSS1 and CSS2 defined the initial value of  the 'border-color'\nproperty  to be  the\nvalue of the 'color' property  but did not define a corresponding keyword.\nThis omission was recognized by SVG, and thus  SVG1.0 introduced\nthe 'currentColor' value  for the 'fill', 'stroke', 'stop-color',\n'flood-color', 'lighting-color' properties. CSS3 extends the color value to\ninclude the 'currentColor' keyword to allow its use with all properties that\naccept a <color> value. This simplifies the definition of those\nproperties in CSS3.\n currentColor\n The value of the 'color' property. If the 'currentColor' keyword is set\non the 'color' property itself, it is treated as 'color:inherit' at parse\ntime.\n 4.5.  CSS System Colors \n 4.5.1.  CSS2 User preferences\nfor colors \n In addition to being able to assign pre-defined color values to text,\nbackgrounds, etc., CSS3,  like CSS2 ,\nallows authors to specify colors in a manner that integrates them into the\nuser's graphic environment. Style rules that take into account user\npreferences thus offer the following advantages:\n They produce pages that fit the user's defined look and feel.\n They produce pages that may be more accessible as the current user\nsettings may be related to a disability.\n For systems that do not have a corresponding value, the specified value\nshould be mapped to the nearest system attribute, or to a default color. Note\nthat some profiles of CSS may not support System Colors at all.\n The following lists additional values for color-related CSS attributes and\ntheir general meaning. Any color property can take one of the following\nnames. Although these are case-insensitive, it is recommended that the mixed\ncapitalization shown below be used, to make the names more legible.\n ActiveBorder \n Active window border.\n ActiveCaption \n Active window caption.\n AppWorkspace \n Background color of multiple document interface.\n Background \n Desktop background.\n ButtonFace \n Face color for three-dimensional display elements.\n ButtonHighlight \n Dark shadow for three-dimensional display elements (for edges facing away\nfrom the light source).\n ButtonShadow \n Shadow color for three-dimensional display elements.\n ButtonText \n Text on push buttons.\n CaptionText \n Text in caption, size box, and scrollbar arrow box.\n GrayText \n Grayed (disabled) text. This color is set to #000 if the current display\ndriver does not support a solid gray color.\n Highlight \n Item(s) selected in a control.\n HighlightText \n Text of item(s) selected in a control.\n InactiveBorder \n Inactive window border.\n InactiveCaption \n Inactive window caption.\n InactiveCaptionText \n Color of text in an inactive caption.\n InfoBackground \n Background color for tooltip controls.\n InfoText \n Text color for tooltip controls.\n Menu \n Menu background.\n MenuText \n Text in menus.\n Scrollbar \n Scroll bar gray area.\n ThreeDDarkShadow \n Dark shadow for three-dimensional display elements.\n ThreeDFace \n Face color for three-dimensional display elements.\n ThreeDHighlight \n Highlight color for three-dimensional display elements.\n ThreeDLightShadow \n Light color for three-dimensional display elements (for edges facing the\nlight source).\n ThreeDShadow \n Dark shadow for three-dimensional display elements.\n Window \n Window background.\n WindowFrame \n Window frame.\n WindowText \n Text in windows.\n Example(s):\n  For example, to set the foreground and background colors of a paragraph\nto the same foreground and background colors of the user's window, write the\nfollowing:\np { color: WindowText; background-color: Window }\n Note.  The computed value of a System Color\nkeyword value is the keyword itself. In addition, in future CSS\nspecifications, the color property may accept additional System Color values.\n 4.5.2.  CSS3 User preferences\nfor hyperlink colors \n Most desktop user agents allow the user to choose the default colors for\nhyperlinks to be rendered in their various states. The following system\ncolors permit an author to explicitly style their hyperlinks in accordance\nwith those preferences. The color names, though case-insensitive, are\npresented here in mixed case (camel-case in particular) in order to be\nconsistent with the CSS2 system colors.\n ActiveHyperlink\n Active hyperlink background.\n ActiveHyperlinkText\n Text of an active hyperlink.\n HoverHyperlink\n Hover hyperlink background.\n HoverHyperlinkText\n Text of a hyperlink in the hover state.\n Hyperlink\n Hyperlink background.\n HyperlinkText\n Hyperlink text.\n VisitedHyperlink\n Visited hyperlink background.\n VisitedHyperlinkText\n Text of a visited hyperlink.\n Example(s):\n  For example, to set all links to their default visited and unvisited\ncolors, write the following:\n:link    { \n  color: HyperlinkText; \n  background-color: Hyperlink \n}\n:visited { \n  color: VisitedHyperlinkText; \n  background-color: VisitedHyperlink \n}\n 4.5.3.  'flavor' system color \n flavor\n An accent color (typically chosen by the user) to customize the user\ninterface of the user agent itself. User agents may default the 'flavor'\ncolor to the dominant accent color used on the physical machine/mechanism\nthat the user is interacting with (frequently a mouse, keyboard, monitor and\ncomputer case, often just a laptop), if the UA is able to retrieve that\ninformation from the platform and machine. It is not expected that this value\nwill make sense on all platforms and machines.\n DEPRECATED EXAMPLE:\n:focus {outline: 1px solid flavor}\n  /* puts an outline around the currently focused element that color\ncoordinates with the browser accent color if any */\n 4.6.  Notes on using colors \n Although colors can add significant amounts of information to document and\nmake them more readable, please consider the W3C Web Content Accessibility\nGuidelines  [WCAG]  when including color\nin your documents.\n Guideline\n2. Don't rely on color alone. \n 5.  Sample style sheet for HTML 4.0 \n This appendix is informative, not normative.\nbody { \n\tcolor: black;\n\tbackground: white;\n\tcolor-profile: sRGB;\n\trendering-intent: auto \n}\n/* traditional desktop user agent colors for hyperlinks */\n:link    { color: blue; }   \n:visited { color: purple; }\n/* user preferences for hyperlinks */\n:link    { \n  color: HyperlinkText; \n  background-color: Hyperlink \n}\n:visited { \n  color: VisitedHyperlinkText; \n  background-color: VisitedHyperlink \n}\n:link:hover,:visited:hover { \n  color: HoverHyperlinkText; \n  background-color: HoverHyperlink \n}\n:link:active,:visited:active { \n  color: ActiveHyperlinkText; \n  background-color: ActiveHyperlink \n}\nimg,object {\n \tcolor-profile: auto;\n \trendering-intent: auto\n}\n/* default focus outline */\n:focus {\n\toutline: 1px dotted gray; \n\toutline: 1px solid flavor;\n}\n 6.  Profiles \n Each specification using  CSS3 Color  must\ndefine the subset of CSS3 Color features it allows and excludes, and describe\nthe local meaning of all the components of that subset.\n Non normative examples:\n CSS3 Color \nprofile\n Specification\n HTML4\n Accepts\n HTML4 color keywords  \nRGB six digit hex color values\n Excludes\n 'color' property \n'opacity' property \n'color-profile' property \n'rendering-intent' property  \n@color-profile rule \nRGB three digit hex color values and RGB functional notation color values\nRGBA color values \nHSL and HSLA color values \nSVG color keywords  \n'currentColor' color value  \nCSS2 UI Colors \nCSS3 Hyperlink Colors \n'transparent' color value  \n'flavor' color value\n Extra constraints\n none.\n CSS3 Color \nprofile\n Specification\n CSS level 1\n Accepts\n 'color' property  \nHTML4 color keywords  \nRGB color values\n Excludes\n 'opacity' property \n'color-profile' property \n'rendering-intent' property  \n@color-profile rule \nRGBA color values \nHSL and HSLA color values \nSVG color keywords  \n'currentColor' color value  \nCSS2 UI Colors \nCSS3 Hyperlink Colors \n'transparent' color value  \n'flavor' color value\n Extra constraints\n none.\n CSS3 Color \nprofile\n Specification\n CSS level 2\n Accepts\n 'color' property  \nHTML4 color keywords  \nRGB color values  \nCSS2 UI Colors  \n'transparent' color value\n Excludes\n 'opacity' property \n'color-profile' property \n'rendering-intent' property  \n@color-profile rule \nRGBA color values \nHSL and HSLA color values  \nSVG color keywords  \n'currentColor' color value  \nCSS3 Hyperlink Colors  \n'flavor' color value\n Extra constraints\n 'transparent' color value not valid for 'color' property.\n CSS3 Color \nprofile\n Specification\n SVG 1.0\n Accepts\n 'color' property  \n'opacity' property \n@color-profile rule  \nHTML4 color keywords  \nRGB color values  \nCSS2 UI Colors  \nSVG color keywords  \n'currentColor' color value\n Excludes\n 'color-profile' property \n'rendering-intent' property  \nRGBA color values \nHSL and HSLA color values  \nCSS3 Hyperlink Colors \n'transparent' color value  \n'flavor' color value\n Extra constraints\n 'currentColor' color value not valid for 'color' property.\n 7.  Test Suite \n  This specification contains a test suite allowing user agents to verify\ntheir basic conformance to the specification. This test suite does not\npretend to be exhaustive and does not cover all possible numerical color\nvalues. These tests are available [link forthcoming].\n 8.  Acknowledgments \n Thanks to Brad Pettit for both writing up color-profiles, and for\nimplementing it. Thanks to Steven Pemberton for his write up on HSL colors.\nThanks to feedback from Marc Attinasi, David Baron, Bert Bos, Ian Hickson,\nSteve Zilles. And thanks to Chris Lilley for being the resident CSS Color\nexpert.\n 9.  References \n 9.1.  Normative \n [COLORIMETRY]\n Colorimetry, Second Edition.  CIE Publication 15.2-1986. ISBN\n3-900-734-00-3 URL:  http://www.hike.te.chiba-u.ac.jp/ikeda/CIE/publ/abst/15-2-86.html \n [HTML401]\n Raggett, D.; Le Hors, A.; Jacobs, I..  HTML 4.01\nSpecification.  Dec 1999. W3C Recommendation. URL:  http://www.w3.org/TR/1999/REC-html401-19991224 \n [ICC32]\n ICC Profile Format Specification, version 3.2.  1995. URL:  http://www.color.org/icc32.pdf \n [PNG1.0]\n T. Boutell ed.  PNG (Portable Network Graphics) Specification,\nVersion 1.0.  1 October 1996. W3C Recommendation. URL:  http://www.w3.org/TR/REC-png-multi.html \n [SRGB]\n Multimedia systems and equipment - Colour measurement and\nmanagement - Part 2-1: Colour management - Default RGB colour space -\nsRGB.  IEC 61966-2-1 (1999-10). ISBN: 2-8318-4989-6 \u00ad ICS codes:\n33.160.60, 37.080 \u00ad TC 100 \u00ad 51 pp. URL:  http://www.iec.ch/nr1899.htm \n 9.2.  Informative \n [CSS2]\n Bert Bos; H\u00e5kon Wium Lie; Chris Lilley; Ian Jacobs.  Cascading Style\nSheets, level 2.  1998. W3C Recommendation. URL:  http://www.w3.org/TR/REC-CSS2 \n [CSSICCPROF]\n Brad Pettit; Tantek \u00c7elik; Chris Lilley.  Color Profiles for\nCSS3.  22 June 1999. W3C Working Draft. (Work in progress.) URL:  http://www.w3.org/1999/06/WD-css3-iccprof-19990623 \n [CSSUI]\n Tantek \u00c7elik; Peter Linss; Sho Kuwamoto.  User Interface for\nCSS3.  16 February 2000. W3C Working Draft. (Work in progress.) URL:  http://www.w3.org/TR/2000/WD-css3-userint-20000216 \n [HTMLICCPROF]\n Apple Computer with input from Microsoft Corporation.  Proposal for\nHTML support of ICC profiles.  URL:  http://www.apple.com/colorsync/benefits/web/icc-profiles.html \n [OEB101]\n Open eBook(tm) Publication Structure 1.0.1.  Open eBook\nForum(tm). 02 July 2001. URL:  http://www.openebook.org/oebps/oebps1.0.1/download/oeb101-xhtml.htm \n [SVG10]\n Various.  Scalable Vector Graphics (SVG) 1.0 Specification. \nSep 2001. W3C Recommendation. URL:  http://www.w3.org/TR/2001/REC-SVG-20010904 \n [WCAG]\n Wendy Chisholm; Gregg Vanderheiden; Ian Jacobs.  Web Content\nAccessibility Guidelines 1.0.  5-May-1999. W3C Recommendation. URL:  http://www.w3.org/TR/1999/WAI-WEBCONTENT-19990505 \n [X11COLORS]\n Robert B. Hess.  Colors By Name.  MSDN Online Web Workshop. 02\nNovember 1996. URL:  http://msdn.microsoft.com/library/default.asp?url=/library/en-us/dnwebgen/html/X11_names.asp \n Index \n color,  # \n names of,  # \n color-profile,  # \n <color>\n definition of,  # \n 'name',  # \n opacity,  # \n rendering-intent,  # \n 'rendering-intent',  # \n 'src',  # \n Property index \n Property\n Values\n Initial\n Applies\u00a0to\n Inh.\n Percentages\n Media\n color \n <color> | inherit | attr(<identifier>,color)\n depends on user agent\n all elements\n yes\n N/A\n visual\n color-profile \n auto | sRGB | <name> | <uri> | inherit\n auto\n all elements\n yes\n N/A\n visual\n opacity \n <alphavalue> | inherit\n 1 none\n all elements\n no\n N/A\n visual\n rendering-intent \n auto | perceptual | relative-colorimetric | saturation |\nabsolute-colorimetric | inherit\n auto\n all elements\n yes\n N/A\n visual"}