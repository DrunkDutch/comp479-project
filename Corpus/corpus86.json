{"url": "http://www.w3.org/Graphics/Color/sRGB.html", "content": "A Standard Default Color Space for the Internet - sRGB\n Note:  This document is obsolete, and is retained here for historical purposes only. It was published on 5 November 1996, as a proposal specification for sRGB as a standard default color space. sRGB has since been standardized within the International Electrotechnical Commission (IEC) as IEC 61966-2-1. During standardization, a small numerical error caused by rounding error was corrected. The viewing conditions were also clarified. \n The W3C  CSS3 Color specification  specifically references \"Multimedia systems and equipment - Colour measurement and management - Part 2-1: Colour management - Default RGB colour space - sRGB\". IEC 61966-2-1 (1999-10) ISBN: 2-8318-4989-6 - ICS codes: 33.160.60, 37.080 - TC 100 - 51 pp. as amended by Amendment A1:2003. \n The latest official sRGB specification may also be purchased from the  IEC .  \n A Standard Default Color Space for \nthe Internet - sRGB \n Michael Stokes (Hewlett-Packard), Matthew\nAnderson (Microsoft), \n Srinivasan Chandrasekar (Microsoft), Ricardo\nMotta (Hewlett-Packard)\n Version 1.10, November 5, 1996\n Introduction \n Hewlett-Packard and Microsoft propose the addition\nof support for a standard color space, sRGB, within the Microsoft\noperating systems, HP products,  the Internet, and all other interested\nvendors. The aim of this color space is to complement the current\ncolor management strategies by enabling a third method of handling\ncolor in the operating systems, device drivers and the Internet\nthat utilizes a simple and robust device independent color definition.\nThis will provide good quality and backward compatibility with\nminimum transmission and system overhead. Based on a calibrated\ncolorimetric RGB color space well suited to Cathode Ray Tube (CRT)\nmonitors, television, scanners, digital cameras, and printing\nsystems, such a space can be supported with minimum cost to software\nand hardware vendors. Our intent here is to promote its adoption\nby showing the benefits of supporting a standard color space,\nand the suitability of  the standard color space, sRGB, we are\nproposing.  We will describe some of the system issues and propose\na methodology for to implement support for sRGB and color management\non the World Wide Web.\n Part 1 :  History and Background of sRGB color \nspace \n A Perceived Need \nRecently the  International Color\nConsortium  has proposed breakthrough solutions to problems in\ncommunicating color in open systems. Yet the  ICC profile  format does\nnot provide a complete solution for all situations.\nCurrently, the ICC has one means of tracking and\nensuring that a color is correctly mapped from the input to the\noutput color space. This is done by attaching a profile for the\ninput color space to the image in question. This is appropriate\nfor high end users. However, there are a broad range of users\nthat do not require this level of flexibility and control. Additionally,\nmost existing file formats do not, and may never support color\nprofile embedding, and finally, there are a broad range of uses\nactually discourage people from appending any extra data to their\nfiles. A common standard RGB color space addresses these issues\nand is useful and necessary.  \nWe expect application developers and users that do\nnot want the overhead of embedding profiles with documents or\nimages to convert them to a common color space and store them\nin that format. Currently there is a plethora of RGB monitor color\nspaces attempting to fill this void with little guidance or attempts\nat standards. There is a need to merge the many standard and non-standard\nRGB monitor spaces into a single standard RGB color space. Such\na standard could dramatically improve the color fidelity in the\ndesktop environment. For example, if operating system vendors\nprovide support for a standard RGB color space, the input and\noutput device vendors that support this standard color space could\neasily and confidently communicate color without further color\nmanagement overhead in the most common situations. The three major\nfactors of this RGB space are the colorimetric RGB definition,\nthe equivalent gamma value of 2.2 and the well-defined viewing\nconditions, along with a number of secondary details necessary\nto enable the clear and unambiguous communication of color.\n Colorimetric RGB \nThe dichotomy between the device dependent (e.g.\namounts of ink expressed in CMYK or digitized video voltages expressed\nin RGB) and device independent color spaces (such as CIELAB or\nCIEXYZ) has created a performance burden on applications that\nhave attempted to avoid device color spaces. This is primarily\ndue to the complexity of the color transforms they need to perform\nto return the colors to device dependent color spaces. This situation\nis worsened by a reliability gap between the complexity and variety\nof the transforms, making it hard to ensure that the system is\nproperly configured. \nTo address these concerns and serve the needs of\nPC and Web based color imaging systems, we propose a colorimetric\nRGB specification that is based on the average performance of\npersonal computer displays. This solution is supported by the\nfollowing observations:\n Most computer monitors are similar in their key\ncolor characteristics - the phosphor chromaticities (primaries)\nand transfer function\n RGB spaces are native to displays, scanners and\ndigital cameras, which are the devices with the highest performance\nconstraints\n RGB spaces can be made device independent in\na straightforward way. They can also describe color gamuts that\nare large enough for all but a small number of applications.\nThis combination of factors makes a colorimetric\nRGB space well suited for wide adoption since it can both describe\nthe colors in an unambiguous way and be the native space for actual\nhardware devices. This, many readers will recognize, describes\nin a roundabout way what has been the practice in color television\nfor some 45 years. This proven methodology provides excellent\nperformance where it is needed the most, the fast display of images\nin CRT monitors. \n Gamma and the desired CRT gamma of 2.2 \nFor computer software and hardware designers the\nmost significant aspect of the proposed space is the 2.2 CRT gamma.\nBecause gamma correction tends to be a topic surrounded by confusion,\nit is worthwhile spending a few paragraphs discussing it.\n Definitions of gamma \nWe start this discussion by defining four separate\naspects of gamma. \n viewing gamma  - the\noverall system gamma that we want to obtain and is typically computed\nby multiplying the camera gamma by the display gamma as shown\nbelow.\n  (0.1) \n camera gamma  - the characteristic of the image sensor or \nvideo camera standard transfer\nfunction\n CRT gamma  -  the gamma\nof the physical CRT. \n LUT gamma  -  the gamma\nof the frame buffer lookup table\n display gamma  -  the\n\"display system\" gamma downstream of the frame buffer\nwhich is typically computed by multiplying the CRT gamma by the\nLUT gamma as shown below. \n (0.2) \nThese definitions have been kindly provided by the\n World Wide Web Consortium  and are \nincluded in the PNG file format specification available at \n http://www.w3.org/pub/WWW/TR/REC-png-multi.html .\nThese definitions do  not  describe the individual gamma\nparameter in equation 0.4 below. Instead, they describe the resulting\npower parameter of the appropriate transfer function when fit\nby a power function. It is extremely important to keep this distinction\nclear or else one implicitly assumes equations 0.4 and 0.5 are\nequivalent and the system black level is truly 0.0 and the system\ngain is 1.0.\n Viewing Gamma \nThe reason that a viewing gamma of 1.125 is used\ninstead of 1.0 is to compensate for the viewing environment conditions,\nincluding ambient illumination and flare. Historically, viewing\ngammas of 1.5 have been used for viewing projected slides in a\ndark room and viewing gammas of 1.25 have been used for viewing\nmonitors in a very dim room. This very dim room value of 1.25\nhas been used extensively in television systems and assumes a\nambient luminance level of approximately 15 lux. The current proposal\nassumes an encoding ambient luminance level of 64 lux which is\nmore representative of a dim room in viewing computer generated\nimagery. Such a system assumes a viewing gamma of 1.125 and is\nthus consistent with the 709 standard described below. While we\nbelieve that the typical office or home viewing environment actually\nhas an ambient luminance level around 200 lux, we found it impractical\nto attempt to account for the resulting large levels of flare\nthat resulted. In addition, recent work by the ISO JTAG2 standards\ncommittee supports the ambient luminance level of 64 lux.\nIf the viewing condition is different from the standard,\nthen the decoding process must compensate. This can be done by\nmodifying the gamma values in equation 1.2 below by the appropriate\nfactor. If one does modify the gamma values in equation 1.2 below,\nextreme care must be taken to avoid quantization errors when working\nwith 24 bit images and high viewing flare levels.\nThe ITU-R BT.709 transfer function in combination\nwith its target monitor is attempting to achieve a viewing gamma\nof 1.125 by incorrectly assuming a CRT gamma of 2.5 and an LUT\ngamma of 1.0/2.222 as shown in the equation below. The justification\nof a viewing gamma value of 1.125 is described below in the section\non viewing environment compensation.\n  (0.3)\nUsing the actual power function fit value for the\n709 transfer function of 1.0/1.956 and maintaining the display\ngamma of 1.125, we can solve for the ideal target monitor gamma\nof 2.2. This is consistent with the CRT gamma value proposed in\nthis paper. \n Camera Gamma \nThe camera gamma 1.0/2.2 was the standard for television\ncamera encoding before the advent of color TVs and was formalized\nin 1953 with the NTSC broadcast television standards. More recently\nITU-R BT.709 has been adopted internationally and contains camera\ngamma of 1.0/1.956. The actual exponent factor in the 709 transfer\nfunction is 1.0/2.222. Despite the fact that the exponent of the\n709 function is 1.0/2.222, the actual 709 encoding transfer function\nis closer to a CRT gamma of 1.0/1.956 than 1.0/2.222. This is\ndue to the large offset of 0.099 in the transfer function equation.\nThis is well matched to the eye's own non-linearity and it helps\nminimize transmission noise in the dark areas. \nBroadcast television camera gamma standards and the\nITU-R BT.709 standard in particular defines the transformation\nof real world CIEXYZ tristimulus values into a target RGB monitor\nspace. This is essentially a composite of two transformations;\none from real world CIEXYZ tristimulus values into standard monitor\nCIEXYZ tristimulus values and one from these standard monitor\nCIEXYZ tristimulus values into standard monitor rgb values. The\nresulting image is not an exact appearance match of the original\nscene, but instead is a preferred reproduction of the original\nscene that is consistent with the limitations of a monitor.\nBecause all television sets have to display content\ngenerated with this encoding, it was very important for all CRT\ngamma designs to conform to it. Only recently has the computer\nmonitor market become as large as the TV market. As a result,\nmost computer monitors still perform optimally with imagery using\nwith a camera gamma value of approximately 1.0/1.956\n CRT Gamma \n The non-linearity of the electro-optical radiation\ntransfer function of CRTs is often expressed by a mathematical\npower function exponent parameter called gamma. This transfer\nfunction describes how much visible radiant energy (cd/m 2 )\nresults from voltages applied to the CRT electron-gun. Because\nmost of the other characteristics of CRT based computer monitors\nare linear (including DACs and video amplifiers) the resulting\ntransfer function has the same gamma value determining its non-linearity.\n  (0.4)\n Where k 1  and k 2  are the system\ngain and offset, D is the normalized pixel value, A is the maximum\nluminance of the CRT and I is the resulting luminance. This equation\nand a thorough analysis of the CRT characteristics and history\nare well described in \"An Analytical Model for the Colorimetric\nCharacterization of Color CRTs\" by Ricardo Motta, Rochester\nInstitute of Technology, 1991. \nThe key point that we wish to convey here is that\ngamma component of the CRT gamma is dependent only on the electron\ngun design, and the vast majority of monitors and TV sets in use\ntoday are based on designs that result, on average, in the value\n2.2 for gamma component of the CRT gamma and a 2.2 overall CRT\ngamma value when typical system gain and offsets are optimally\nset. Most of the variation between computer monitors and between\nTV sets are due to the differences in system gain and offsets\n(k 1  and k 2 ), which are partially under control\nof the user in the form of contrast and brightness knobs. Unfortunately,\nthe actual set-up is often not known, but the best CRT performance\nhappens when the system offset puts the dark parts of the images\nat the CRT cut-off, i.e. the black (pixel value 0) parts of the\nCRT image are just about to emit light. Under these conditions\nequation 0.4 above becomes\n  >(0.5) \nand the monitor has the widest-dynamic range. Unfortunately,\nthis is not the common condition. Unfortunately the simplified\nform in equation 0.5 is what is usually found in the computer\nliterature.\nThere are significant variations, with widest variations\nbeing in the set-up and screen reflectivity (older and less expensive\ndisplay can reflect up to 20% of the ambient light). These factors\ntypically can not be characterized a priori since they might change\nin the course of the day (ambient light) and at the whim of the\nuser (by modifying contrast and brightness). Yet, in practice,\nthe process tends to be self-regulatory, with users looking for\ndarker places to set their monitors and modifying the controls\nto re-establish the expected display appearance. Exhaustive testing\ncarried on at Hewlett-Packard on VGA computer monitors from many\nbrands has shown the average CRT gamma to be indeed 2.2, with\na standard deviation of about 0.2.\n LUT gamma \nTwo special circumstances will lead computer systems\nto systematically deviate from the 2.2 CRT gamma and the 1.0 LUT\ngamma that we propose - color dithering for 16 color systems\nand system imposed gamma correction via look-up-tables (LUT).\nThe first of course was very common until a few years\nago. Until about 1993 most Windows PCs were well described by\na display gamma of 1.8 because despite having 2.2 CRT gamma systems,\nthe colors were dithered into the 4 bit frame buffers, resulting\nin a flattening of the system transfer function. This happens\nbecause screen dithering mixes colors linearly in the eye, making\nit less dependent on the CRT non-linearity. Since currently most\nWindows PC support 16 or 24 bit color modes, 2.2 CRT gamma\nis now the average.\nThe second systematic deviation happens\nwhen the graphics system in the computer hardware or software\nimposes its own gamma correction. This is done for a variety of\nreasons, but is usually an attempt to compromise between image\ndisplay and graphics/image processing performance (most computer\ngraphic rendering assumes linear radiation space, e.g. transparency\noperations, and so does image processing, e.g. scaling and filtering).\nThe gamma correcting of image data can be described by applying\nan exponent to the image data. For the Macintosh the display gamma\nis around 1.571 using a LUT gamma of 1.4 (2.2/1.4 = 1.571) and\nfor SGI workstations the display gamma is around 1.294 using a\nLUT gamma of 1.7 (2.2/1.7 = 1.294).\nThere has been significant confusion derived from\nassuming the CRT gamma value is identical to the exponent in equation\n0.4. This has led to many claims of CRT gamma values of 2.5 for\nvideo, 1.8 for the Apple Macintosh and 1.4 for SGI monitors. Unfortunately,\nit has been our experience that this misconception is not well\nfounded in the actual physics of the displays and solid measurements.\n sRGB and ITU-R BT.709 Compatibility \nThere has been some confusion in previous versions\nof this proposal with respect to compatibility with the ITU-R\nBT.709 standard. Many readers have also expressed concern for\ncompatibility with the 709 recommendation in general. After review,\nthe authors have confirmed the compatibility between this proposal\nand the 709 recommendation. Unfortunately, the ITU-R BT.709 standard\ncan be somewhat confusing for many readers. Below is an attempt\nto clarify and reduce this confusion.\nFor a single color space to achieve acceptance, it\nmust be objective, that is, have a tightly-defined relationship\nwith the CIE standards. We are fortunate to have obtained in April\n1990 unanimous worldwide agreement on a calibrated nonlinear RGB\nspace for HDTV production and program exchange: Rec. ITU-R BT.709.\nThis recommendation specifies the encoding of real world scene\ntristimulus values into a standard monitor RGB color space assuming\na dark viewing condition. HP and Microsoft suggest using these\nparameters as the basis for the sRGB color space but with a dim\nviewing condition which is closer to most typical viewing environments\nfor computer displayed imagery. Unfortunately the ITU specification\nis rather vague on defining the target monitor. This paper attempts\nto provide a clear and well defined target monitor for the Rec.\nITU-R BT.709 camera encoding standard for a dim viewing environment.\nThe ITU-R BT.709 standard specifically describes\nthe encoding transfer function for a video camera that when viewed\non a \"standard\" monitor will produce excellent image\nquality. The implicit target of this encoding is a standard video\nmonitor whose transfer function or CRT gamma is  not  explicitly\ndelineated. Instead a typical monitor setup is assumed. This paper\nattempts to explicitly describe a standard monitor setup that\nis compatible with the 709-encoding standard. \nThis is illustrated in Figures 1-3 below. Figure\none is directly derived from the ITU-R BT.709 standard. This standard\nprovides mathematical methods to transform from tristimulus values\nof the scene using a video camera into a reference monitor device\nspace. \n Figure 1\nFigure two expands the implicit step of these methods\nand shows the transformation between the original scene tristimulus\nvalues into the target monitor tristimulus values. Since these\ntwo viewing conditions are different, an implicit compensation\nis made to account for these differences (i.e. flare and ambient\nluminance). In order to provide an independent monitor reference\ncolor space, the monitor compensation methods must be extracted\nfrom this confounded compensation. This is precisely the goal\nof the sRGB color space. \n Figure 2\nFigure three illustrates both the sRGB color space\nand the extraction of the monitor only specifications implicit\nwithin the ITU-R BT.709 standard. By producing such a monitor\nspace, one can then transfer the ITU-R BT.709 encoded signals\nto other devices. By building on this system, the sRGB color space\nprovides a monitor definition that can be used independently from\nthe ITU-R BT.709 standard while maintain compatibility. This allows\nfor the well-defined transfer of color information across the\nWorld Wide Web as described in the other section of this paper.\n Figure 3\nThis sRGB recommendation essentially defines the\nsecond part of this transformation between the target RGB monitor\nspace and the monitor CIEXYZ tristimulus values in a dim viewing\nenvironment. This is required to maintain a consistent monitor\ncentric color reproduction process that is typical of the web\nand is consistent with recommendations of the International Color\nConsortium. This is also consistent with maintaining the preferred\nreproduction encoding of the ITU standard.\nIn summary, there has been some concern with the\nchoice of a 2.2 CRT gamma with a 1.0 LUT gamma as opposed to a\n1.571 (2.2/1.4) or a 1.294 (2.2/1.7) display gamma. We feel that \nthere are many reasons to support a 2.2 CRT, including;\n compatibility with a large legacy of images\n Photo CD,\n many Unix workstations,\n PC's with 256+ colors and their desktop color\nschemes and icons,\n several ultra-large image collections,\n analog television,\n Apple Macintosh video imagery,\n CCIR 601 images,\n a better fit with Weber's fraction,\n compatibility with numerous standards,\n TIFF/EP,\n EXIF,\n digital TV,\n HDTV,\n analog video,\n PhotoCD,\n it is closer to native CRTs gamma,\n and consistency with a larger market of displays.\n Alpha Channel Masking and Computer Graphics Compatibility\nAnother concern that has been expressed about encoding\nusing a gamma of 2.2 is the use of alpha masking. Typically computer\ngraphics effects, including alpha masking, operate in an optical\nintensity environment as opposed to a visually uniform one. This\nmandates using a linear gamma of 1.0 in most computer graphic\noperations which is obviously incompatible with the visually uniform\nencoding using a gamma of 2.2. In a 24 bit encoding scheme, encoding\na mid-level gray using a gamma of 1.0 would result in a digital\ncount of 46. Such an encoding scheme would create visually objectionable\nartifacts such as contours. Therefore we recommend that effects\nsuch as alpha masking be performed either prior to encoding or\nby decoding to a color resolution greater than 24 bits and then\nconverting into linear intensity space. \nAgain, it is fundamental to realize that there are\ntwo common operational spaces discussed here; 1) the linear intensity\nspace in which most optical and synthetic visualization operations\nwork within and 2) a nearly visually perceptibly uniform space\nin which visual based operations, compression and many devices\nwork within. This difference is vitally important to remember\nsince both types of operations are required and thus interaction\nbetween these two types of spaces occur frequently.\n Part 2: Definition of the sRGB Color Space \n A Single RGB Standard Color Space \nThere are two parts to the proposed standard described\nin this paper; the viewing environment parameters with its dependencies\non the human visual system and the standard device space colorimetric\ndefinitions and transformations. The viewing environment descriptions\ncontain all the necessary information, when combined with most\ncolor appearance models, to provide conversions between the standard\nand target viewing environments. The colorimetric definitions\nprovide the transforms necessary to convert between the sRGB color\nspace and the CIEXYZ two degree observer color space. \n sRGB reference viewing environment \nReference viewing environments are defined for standard\nRGB in Table 0.1.\n TABLE 0.1 \nsRGB viewing environment Parameters \n Condition \n sRGB \n Luminance level \n 80 cd/m 2 \n Illuminant White \n x  = 0.3127,  y  = 0.3291 (D65)\n Image surround \n 20% reflectance \n Encoding Ambient Illuminance Level \n 64 lux \n Encoding Ambient White Point \n x = 0.3457, y = 0.3585 (D50) \n Encoding Viewing Flare \n 1.0% \n Typical Ambient Illuminance Level \n 200 lux \n Typical Ambient White Point \n x  = 0.3457,  y  = 0.3585 (D50) \n Typical Viewing Flare \n 5.0% \nThe sRGB reference viewing environment corresponds to conditions\ntypical of monitor display viewing conditions.\nThe  luminance level  is representative of typical CRT display\nlevels. \nThe chromaticities of the  illuminant white  are those of\nCIE D 65 .\nThe  image surround  is defined as \"20%\" of the\nmaximum white luminance. This is close to a CIELAB L* value of\n50, while maintaining computational simplicity. The areas surrounding\nthe image being viewed are similar in luminance and chrominance\nto the image itself. This surround condition would correspond,\nfor example, to a reflection print displayed on a spectrally non-selective\ngray background of about twenty percent reflectance, where the\nprint and the background are uniformly illuminated by the same\nlight source.\nThis specification defines the concepts of an encoding viewing\nenvironment and a typical viewing environment. The encoding viewing\nenvironment is consistent with recent discussions within the ISO\nJTAG2 committee for graphic arts and photographic viewing conditions\nfor photographic images on monitors. If possible to achieve, this\nis the recommended viewing environment for viewing photographic\nimages on monitors. The typical viewing environment is representative\nof a typical office or home office viewing environment for personal\ncomputers.\nFor optimal results, we recommend using the encoding viewing environment\nwhen viewing sRGB encoded images. We also recognize that this\nis quite different from typical viewing environment.\nWhile one would theoretically use the viewing conditions which\nrepresent the actual or typical viewing environment, if this is\ndone with 24 bit images a significant loss in the quality of shadow\ndetail results.  This is due to encoding the typical viewing flare\nof approximately 5.0 percent into a 24 bit image as opposed to\nthe encoding viewing flare of 1 percent. Therefore we recommend\nusing the encoding viewing environment for most situations including\nwhen one's viewing environment is consistent with the typical\nviewing environment and not the encoding viewing environment.\nThe  encoding ambient illuminance level  is intended to be\nrepresentative of a dim viewing environment.  Note that the illuminance\nis at least an order of magnitude lower than average outdoor levels\nand approximately one-third of the typical ambient illuminance\nlevel.\nThe chromaticities of the  encoding ambient white  are those\nof CIE D 50 .\n Encoding viewing flare  is specified to be 1.0% of the maximum\nwhite-luminance level.\nThe  typical ambient illuminance level  is intended to be\nrepresentative of a typical office viewing environment.  Note\nthat the illuminance is at least an order of magnitude lower than\naverage outdoor levels.\nThe chromaticities of the  typical ambient white  are those\nof CIE D 50 .\n Typical Viewing flare  is specified to be 5.0% of the maximum\nwhite-luminance level.\n Colorimetric definitions and digital encodings \nsRGB in combination with the reference viewing environments\ncan be defined from standard CIE colorimetric values through simple\nmathematical transformations. \nCIE colorimetry provides the basis for sRGB encoding\nof the color. For the calculation of CIE colorimetric values,\nit is necessary to specify a viewing environment and a set of\nspectral sensitivities for a specific capture device. The definitions\nfor RGB given in equations 1.1 to 1.3 are based on the colorspace's\nrespective viewing environment.\nThe CIE chromaticities for the red, green, and blueITU-R\nBT.709 reference primaries, and for CIE Standard Illuminant D 65 ,\nare given in Table 0.2.\n TABLE 0.2 CIE chromaticities for ITU-R BT.709 reference primaries and CIE standard illuminant\n Red \n Green \n Blue \n D65 \n x \n 0.6400 \n 0.3000 0.1500 \n 0.3127 \n y \n 0.3300 \n 0.6000 0.0600 \n 0.3290 \n z \n 0.0300 \n 0.1000 0.7900 \n 0.3583 \nsRGB tristimulus values for the illuminated objects of the scene\nare simply linear combinations of the 1931 CIE XYZ values and\nthese  RGB  tristimulus values can be computed using the\nfollowing derived relationship:\n  (1.1) \nIn the RGB encoding process, negative sRGB   tristimulus\nvalues, and sRGB tristimulus values greater than 1.00 are not\ntypically retained. When encoding software cannot support this\nextended range, the luminance dynamic range and color gamut of\nRGB is limited to the tristimulus values between 0.0 and 1.0 by\nsimple clipping. This gamut, however, is large enough to encompass\nmost colors that can be displayed on CRT monitors . \nThe sRGB tristimulus values are next transformed\nto nonlinear sR'G'B' values as follows:\nIf  \n  (1.2a) \nelse if  \n  (1.2b) \nThe effect of the above equations is to closely fit\na straightforward gamma 2.2 curve with an slight offset to allow\nfor invertability in integer math. Therefore, we are maintaining\nconsistency with the gamma 2.2 legacy images and the video industry\nas described previously.\nFinally, the nonlinear sR'G'B' values are converted\nto digital code values.  This conversion scales the above sR'G'B'\nvalues by using the equation below where WDC represents the white\ndigital count and KDC represents the black digital count.\n  (1.3) \nThis current specification proposes using a black\ndigital count of 0 and a white digital count of 255 for 24-bit\n(8-bits/channel) encoding. The resulting RGB values are formed\naccording to the following equations:\n  (1.4) \nThis obviously can be simplified as shown below.\n  (1.5) \nThe reverse relationship is defined as follows;\n  (1.6) \nIf  \n  (1.7a) \nelse if  \n  (1.7b) \nand\n  (1.8) \nDigital broadcast television uses a black digital\ncount of 16 and a white digital count of 235 in order to provide\na larger encoded color gamut.  We do not propose using this encoding\nat this time, due to the large legacy of images and applications\nusing the previous black and white digital coding counts. However,\nit is vital to allow for a future revision to provide this capability.\n Part 3 : Implementation on the Web \n Color Spaces \n Definition: \n A color space is a model for representing color\nnumerically in terms of three or more coordinates. e.g. The RGB\ncolor space represents colors in terms of the Red, Green and Blue\ncoordinates.  \nFor color to be reproduced in a predictable manner\nacross different devices and materials, it has to be described\nin a way that is independent of the specific behavior of the mechanisms\nand materials used to produce it. For instance, color CRTs and\ncolor printers use very different mechanisms for producing color.\nTo address this issue, current methods require that color be described\nusing device independent color coordinates, which are translated\ninto device dependent color coordinates for each device. \n Color Management \n Definition: \n Color management is a term that describes a technology\nthat translates the colors of an object (images, graphics or text)\nfrom their current color space to the color space of the output\ndevices like monitors, printers, ... \nTraditionally, operating systems have supported color\nby declaring support for a particular color space, RGB in most\ncases.  However, since RGB varies between devices, color was not\nreliably reproduced across different devices.  \nThe high-end publishing market could not meet its\nneeds with the traditional means of color support, so the various\nOS's added support for using International Color Consortium (ICC)\nprofiles to characterize device dependent colors in a device independent\nway.  They use the profiles of the input device that created an\nimage and the output device that displayed the image and create\na transform that moves the image from the input device's color\nspace to the output device's color space.  This resulted in very\naccurate color.  However, it also involved the overhead of transporting\nthe input device's profile with the image and running the image\nthrough the transform. \nHP and Microsoft propose an additional  means of\nmanaging color that is optimized to meet the needs of most users\nwithout the overhead of carrying an ICC profile with the image:\nthe addition to the OS and the Internet of support for a Standard\nColor Space.  Since the image is in a known color space and the\nprofile for that color space would ship with the OS and browser,\nthis enables the end users to enjoy the benefits of color management\nwithout the overhead of larger files.  While it may be argued\nthat profiles could buy slightly higher color accuracy, we believe\nthat the benefits of using a standard color space far out-weigh\nthe drawbacks for a wide range of users.  The migration of devices\nto natively support the standard color space will further enhance\nthe speed and quality of the user experience.\nWe are proposing the use of the color space, sRGB, that is \nconsistent with but is a more tightly defined  derivative\nof Rec. ITU-R BT.709 as the standard color space for the OS's\nand the Internet.  In April of 1990 this space obtained unanimous\nworldwide agreement as the calibrated nonlinear RGB space for\nHDTV production and program exchange.\n Proposed Style Sheet Syntax for specifying sRGB on the Internet\nWe propose that all page elements defined in the\nstyle sheets be assumed to be in the sRGB color space unless embedded\nICC profiles indicate otherwise. \n We further propose a new CSS-1 property,  rendering-intent ,\nwith the following syntax to specify the user rendering intents of\npage elements.  These rendering intent values are defined to be\nconsistent with the  International Color\nConsortium  rendering intent values (http://www.color.org) of\nsaturation, perceptual, absolute colorimetric and relative\ncolorimetric.\nSyntax\nValue: saturation | perceptual | absolute  | relative\nInitial: perceptual\nApplies to: all elements\nInherited: yes\nPercentage values: N/A\n Example:\nBODY { rendering-intent: saturation }\nIMG.perceptualintent { rendering-intent: perceptual }\n#mypic001 { rendering-intent: A }\n<IMG ID=mypic001 SRC=\" http://www.site.com/layout.mypic001.png \">\n<IMG CLASS=\"perceptualintent\" SRC=\" http://www.site.com/layout.mypic002.gif \">\n Standard Color Space in Practice \nOnce page elements are converted to sRGB, the browser\nneeds to interpret the color space correctly and use the OS color\nmanagement to image the page. The following table summarizes how\nthe browser handles color management in each of the possible scenarios.\n Style Sheet Colors(sRGB) \n HTML Page with no Color Space information \n Re-purpose Data outside of Browser/ \nHTML environment \n Embedded Profile in Image Color Space for Image determined by embedded profile.\n Color Space for Image determined by embedded profile.\n Color Space for Image determined by embedded profile.\n Image file  specifies sRGB Color Space for Image is sRGB\n Color Space for Image is sRGB Color Space for Image is sRGB\n Image has no Color space information. \n Color Space for Image is sRGB Color Space for image is sRGB.\n Color Space for image is sRGB. \n Text  Color Space for text is sRGB\n Color Space for text is sRGB. Color Space for text is sRGB.\n Graphics Color Space for Graphics is sRGB\n Color Space for graphics is sRGB. Color Space for graphics is sRGB.\n Browsing Scenarios \nThe following cases describe what an end-user sees\nin the various scenarios:\n Image not in sRGB, does not have an embedded\nICC profile, and no monitor/output device ICC profile \nThis is the behavior before color management systems\nwere added.  Even though  the image is assumed to be in sRGB color\nspace, it is imaged (displayed, printed etc.) without translation\nto the device color space since the output profile is not available.\nThe quality varies tremendously since output device characteristics\ndiffer greatly. \n Image not in sRGB, does not have an embedded\nICC profile, and system has a monitor/output device ICC profile \nSince the image has no ICC profile, it is assumed\nto be in the sRGB color space. In this scenario, the resulting\nimage will be consistent across devices; however it could be different\nfrom the original image. \n Image in sRGB, and no monitor/output device\nICC profile \nIn this scenario, the image has been run through\na transform that consists of the input device ICC profile, and\nthe sRGB ICC profile, or it was created using devices that conform\nto sRGB. However, since the system has no  ICC profile for the\noutput device, it will simply assume the image is in the device's\ncolor space.  If all the images rendered on the output device\nare in sRGB, then they will at least be consistent with respect\nto each other on a given monitor/output device. \n Image in sRGB, and system has a monitor/output\ndevice ICC profile \nIn this scenario, the image has been run through\na transform that consists of the input device ICC profile, and\nthe sRGB ICC profile, or it was created using devices that conform\nto sRGB. Because the system has an ICC profile for the output\ndevice, the image can be converted to the output device's color\nspace and imaged. The resulting image will be consistent across\ndevices, and will be very close to the original in appearance. \n Image in sRGB, and monitor/output device is\nsRGB compliant \nIn this scenario, the image has been run through\na transform that consists of the input device ICC profile, and\nthe sRGB ICC profile, or it was created using devices that conform\nto sRGB. As the output device has been designed to conform with\nsRGB, and is associated with that ICC profile, a transform is\nnot necessary for this case. The OS realizes that no transformation\nis required and simply images  the image directly  on the output\ndevice. This case is ideal since there is no color transformation\nat output time, and the image is more compact since there is no\nICC profile embedded in it. The resulting image will be consistent\nacross devices, and will be very close to the original in appearance. \n Image not in sRGB, has an embedded ICC profile,\nand no monitor/output device ICC profile \nThis would be treated the same as the \"Image\nnot in sRGB, does not have an embedded ICC profile, and no monitor/output\ndevice ICC profile\" scenario. \n Image not in sRGB, has an embedded ICC profile,\nand system has a monitor/output device ICC profile \nThis is the standard color management scenario. The\ntwo ICC profiles are combined to produce a transform that will\n map the colors of the image into the  output device's color space.\n The resulting image will be consistent across devices, and will\nbe very close to the original in appearance. \n Authoring Scenarios \nThe following scenarios describe how to get an image\ninto the sRGB color space when creating it.\n Image created on a device that has no ICC\nprofiles and is not sRGB compliant \nDisplay the image on a monitor that is sRGB compliant\nor that has an ICC profile. Edit the image until it looks good\non the monitor. For monitors that are not sRGB compliant but have\n ICC profiles, depending on the capabilities of the application,\neither use the application to save the image as sRGB or embed\nthe monitor's profile into the image, and use a tool to create\na transform with the monitor's profile and the sRGB profile and\nrun the image through the transform. If the image file format\nsupports it, specify the image is in sRGB. \n Image created on a device that has ICC profiles\nand is  not sRGB compliant \nUse a tool to create a transform with device's profile\nand the sRGB profile. Then run the image through the transform,\nspecify the image is in sRGB if the image file format supports\nit. \n Image created on a device that is sRGB compliant \nSpecify the image is in sRGB if the image file format\nsupports this. \n Suggestions to benefit from sRGB \n CRT manufacturers who  build monitors in compliance\nwith the sRGB specification will get faster display times for\nobjects in this color space. (No transformation needs to occur.)\n Scanner and digital camera manufacturers who\noptimize the color transforms and gamma correction for compatibility\nwith sRGB will benefit for the same reason.\n Palette Issues \nThere are several different scenarios to consider\nwhen dealing with palettized images and displays.\n Image does not have a color table (> 8bpp),\nand client monitor is not palettized \nThe image is run through a color matching transform\nas described in the previous section, and the resulting 24bpp\nimage is displayed on the monitor. \n Image has a color table (8bpp) and client\nmonitor is not palettized \nThe color table accompanying the image is run through\na color matching, and the resulting color table is used with the\nimage for display. The displayed image is very close to original\nimage. \n Image does not have a color table (>8bpp)\nand client monitor is palettized. \nThe software displaying the image (eg. browser) should\nuse the default palette that is defined in sRGB space, convert\nit into device color space by running it through a color matching\ntransform, and use this palette to display the image. The resulting\nimage gets dithered into the closest possible colors on the display.\nThe assumption is that the monitor profile is created with the\ndefault palette selected. \n Image has a color table (8bpp) and was created\nusing the default palette and client monitor is palettized \nThe software displaying the image should follow the\nsame steps as above. The resulting image is very close to the\noriginal image and unintentional dithering is eliminated. If the\noriginal image only had colors in the default palette, the final\nimage doesn't have any dithering. \n Image has a color table (8bpp) and was created\nusing an arbitrary palette and client monitor is palettized \nIf the client monitor only has a palettized profile and can only\ndisplay the image by discarding this profiled palette and replacing it\nwith an uncalibrated palette, we do  not  recommend to color\nmanage this scenario. If the client monitor is able to treat the image \nas if it was a truecolor (unpalettized) image, it should proceed as \nfor case 3 above. \nNote that cases 3 and 4 assume an industry standard\ndefault palette defined in sRGB color space that will be used\nby authoring and display software to handle 8bpp images. Microsoft\nand HP are working on the definition of such a palette.\n Conclusion \nWe believe that the addition of standard color space,\nsRGB, support to the Internet, device drivers and operating systems\nis a complementary addition to the existing color management support\nthat utilizes and expands the benefits and availability of color\nmanagement to a broader range of users. Furthermore, we believe\nthat sRGB overcomes many application developer and end-user reservations\nto adopting color management. The call for action below presents\na clear path forward to improved color management.\n Call for action \n OS and authoring tools should utilize CRT calibration\nmethods to ensure that images created locally on the monitor are\nproperly translated into sRGB.\n Authoring tools should enable the use of the\nOS color management tools to transform the incoming images into\nsRGB by combining the incoming device ICC profiles with the sRGB\nICC profile. These images will be stored in the original file\nformat  (like GIF, PNG and JPEG), but with the correct colors. \n Authoring tools should enable the user to view\nand edit text and graphics in sRGB.\n Web page creators should publish content in sRGB.\n Browser vendors should support the style sheet\nextensions proposed above and use the OS color management tools\nto ensure that colors are properly displayed.\n Organizations that create and support file formats\nshould ensure that the file formats encompass the ability to embed\nprofiles and declare their color space.\n Acknowledgments \n The authors would like to sincerely thank Ed Giorgianni of Eastman\nKodak Company, Bob Sobol of Hewlett-Packard Company, Charles Poynton,\nauthor of  A Technical Introduction to Digital Video  (John Wiley\nand Sons), Chris Lilley of W3C, Dave Martindale of the University of\nBritish Columbia and many others, for their many insightful comments\nand encouragement throughout this process."}