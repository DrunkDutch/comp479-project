{"url": "http://www.w3.org/TR/CSS2/about.html", "content": "About the CSS\u00a02.1 Specification \n previous  \u00a0\n next  \u00a0\n contents  \u00a0\n properties  \u00a0\n index  \u00a0\n 1 About the CSS\u00a02.1 Specification \n Contents \n 1.1 CSS\u00a02.1 vs CSS\u00a02 \n 1.2 Reading the specification \n 1.3 How the specification is organized \n 1.4 Conventions \n 1.4.1 Document language elements and attributes \n 1.4.2 CSS property definitions \n 1.4.2.1 Value \n 1.4.2.2 Initial \n 1.4.2.3 Applies to \n 1.4.2.4 Inherited \n 1.4.2.5 Percentage values \n 1.4.2.6 Media groups \n 1.4.2.7 Computed value \n 1.4.3 Shorthand properties \n 1.4.4 Notes and examples \n 1.4.5 Images and long descriptions \n 1.5 Acknowledgments \n     (hide)     Note:  Several sections of this specification have been updated by other specifications. Please, see  \"Cascading Style Sheets (CSS) \u2014 The Official Definition\"  in the latest  CSS Snapshot  for a list of specifications and the sections they replace.  The CSS Working Group is also developing  CSS level\u00a02 revision\u00a02 (CSS\u00a02.2).     \n 1.1  CSS\u00a02.1 vs CSS\u00a02 \n The CSS community has gained significant experience with the CSS2\nspecification since it became a recommendation in 1998. Errors in the\nCSS2 specification have subsequently been corrected via the\npublication of various errata, but there has not yet been an\nopportunity for the specification to be changed based on experience\ngained.\n While many of these issues will be addressed by the upcoming CSS3\nspecifications, the current state of affairs hinders the\nimplementation and interoperability of CSS2. The CSS\u00a02.1 specification\nattempts to address this situation by:\n Maintaining compatibility with those portions of CSS2 that are\nwidely accepted and implemented.\n Incorporating all published CSS2 errata.\n Where implementations overwhelmingly differ from the CSS2\nspecification, modifying the specification to be in accordance with\ngenerally accepted practice.\n Removing CSS2 features which, by virtue of not having been\nimplemented, have been rejected by the CSS community. CSS\u00a02.1 aims to\nreflect what CSS features are reasonably widely implemented for HTML\nand XML languages in general (rather than  only  for a\nparticular XML language, or  only  for HTML).\n Removing CSS2 features that will be obsoleted by CSS3, thus\nencouraging adoption of the proposed CSS3 features in their place.\n Adding a (very) small number of  new\nproperty values,  when implementation experience has shown that\nthey are needed for implementing CSS2.\n Thus, while it is not the case that a CSS2 style sheet is\nnecessarily forwards-compatible with CSS\u00a02.1, it is the case that a\nstyle sheet restricting itself to CSS\u00a02.1 features is more likely to\nfind a compliant user agent today and to preserve forwards\ncompatibility in the future. While breaking forward compatibility is\nnot desirable, we believe the advantages to the revisions in CSS\u00a02.1\nare worthwhile.\n CSS\u00a02.1 is derived from and is intended to replace CSS2. Some\nparts of CSS2 are unchanged in CSS\u00a02.1, some parts have been\naltered, and some parts removed. The removed portions may be used in a\nfuture CSS3 specification. Future specs should refer to CSS\u00a02.1\n(unless they need features from CSS2 which have been dropped in\nCSS\u00a02.1, and then they should only reference CSS2 for those\nfeatures, or preferably reference such feature(s) in the respective\nCSS3 Module that includes those feature(s)).\n 1.2  Reading the specification \n This section is non-normative.\n This specification has been written with two types of readers in\nmind: CSS authors and CSS implementors. We hope the specification will\nprovide authors with the tools they need to write efficient,\nattractive, and accessible documents, without overexposing them to\nCSS's implementation details. Implementors, however, should find all\nthey need to build  conforming user\nagents .\nThe specification begins with a general presentation of CSS and\nbecomes more and more technical and specific towards the end. For\nquick access to information, a general table of contents,\nspecific tables of contents at the beginning of each section,\nand an index provide easy navigation, in both the electronic\nand printed versions.\n The specification has been written with two modes of presentation\nin mind: electronic and printed. Although the two presentations will\nno doubt be similar, readers will find some differences. For example,\nlinks will not work in the printed version (obviously), and page\nnumbers will not appear in the electronic version. In case of a\ndiscrepancy, the electronic version is considered the authoritative\nversion of the document.\n 1.3  How the specification is organized \n This section is non-normative.\n The specification is organized into the following sections:\n Section 2: An introduction to CSS\u00a02.1 \n The introduction includes a brief tutorial on CSS\u00a02.1 and\na discussion of design principles behind CSS\u00a02.1. \n Sections 3 - 18: CSS\u00a02.1 reference manual. \n The bulk of the reference manual consists of the CSS\u00a02.1 language\nreference. This reference defines what may go into a CSS\u00a02.1 style sheet\n(syntax, properties, property values) and how user agents must\ninterpret these style sheets in order to claim  conformance .\n Appendixes: \n Appendixes contain information about  aural\nproperties  (non-normative),  a\nsample style sheet for HTML 4 ,  changes\nfrom CSS2 ,  the grammar of CSS\u00a02.1 , \na list of normative and informative  references ,\nand two indexes: one for\n properties  and one\n general index .\n 1.4  Conventions \n 1.4.1  Document language  elements\nand attributes \n CSS property and pseudo-class names are delimited\nby single quotes.\n CSS values are delimited by single quotes.\n Document language attribute names are in lowercase letters \nand delimited by double quotes.\n 1.4.2  CSS property definitions \n Each CSS property definition begins with a summary of key\ninformation that resembles the following: \n 'property-name' \n Value: \u00a0\u00a0 legal values & syntax\n Initial: \u00a0\u00a0 initial value\n Applies to: \u00a0\u00a0 elements this property applies to\n Inherited: \u00a0\u00a0 whether the property is inherited\n Percentages: \u00a0\u00a0 how percentage values are interpreted\n Media: \u00a0\u00a0 which media groups the property applies to\n Computed\u00a0value: \u00a0\u00a0 how to compute the computed value\n 1.4.2.1  Value \n This part specifies the set of valid values for the property whose\nname is  'property-name' . A property\nvalue can have one or more components. Component value types are designated\nin several ways:\n   keyword  values (e.g., auto,\ndisc, etc.)\n  basic data types, which appear between \"<\" and \">\" (e.g.,\n<length>, <percentage>, etc.). In the electronic version\nof the document, each instance of a basic data type links to its\ndefinition.\n  types that have the same range of values as a property bearing\nthe same name (e.g., <'border-width'>\n<'background-attachment'>, etc.).  In this case, the type name\nis the property name (complete with quotes) between \"<\" and \">\"\n(e.g., <'border-width'>).  Such a type does  not \ninclude the value 'inherit'.  In the electronic version of the\ndocument, each instance of this type of non-terminal links to the\ncorresponding property definition.\n  non-terminals that do not share the same name as a property. In this\ncase, the non-terminal name appears between \"<\" and \">\", as in\n<border-width>.  Notice the distinction between\n<border-width> and <'border-width'>; the latter is defined\nin terms of the former. The definition of a non-terminal is located\nnear its first appearance in the specification.  In the electronic\nversion of the document, each instance of this type of value links to\nthe corresponding value definition.\n Other words in these definitions are keywords that must appear\nliterally, without quotes (e.g., red). The slash (/) and the comma (,)\nmust also appear literally.\n Component values may be arranged into property values as follows: \n Several juxtaposed words mean that all of them must occur, in the\ngiven order.\n A bar (|) separates two or more alternatives: \nexactly one of them must occur.\n A double bar (||) separates\ntwo or more options: one or more of them must occur, in any order.\n A double ampersand (&&) separates two or more components, all of which\nmust occur, in any order.\n Brackets ([\u00a0]) are for grouping. \n Juxtaposition is stronger than the double ampersand, the double\nampersand is stronger than the double bar, and the double bar\nis stronger than the bar. Thus, the following lines are equivalent:\n    a b   |   c ||   d &&   e f\n  [ a b ] | [ c || [ d && [ e f ]]]\n  Every type, keyword, or bracketed group may be followed by one of\nthe following modifiers: \n      An asterisk (*) indicates that the preceding type, word, or group\n      occurs zero or more times.\n      A plus (+) indicates that the preceding type, word, or group \n      occurs one or more times.\n      A question mark (?) indicates that the preceding type, word, or\n      group is optional.\n      A pair of numbers in curly braces ({A,B}) indicates that the\n      preceding type, word, or group occurs at least A and at most\n      B times.\n The following examples illustrate different value types:\n Value:  N | NW | NE \n Value:  [ <length> | thick | thin ]{1,4} \n Value:  [<family-name> , ]* <family-name> \n Value:  <uri>? <color> [ / <color> ]? \n Value:  <uri> || <color> \n Value:  inset? && [ <length>{2,4} && <color>? ]\n Component values are specified in terms of tokens, as described in  Appendix G.2 . As the grammar allows spaces\nbetween tokens in the components of the  expr  production,\nspaces may appear between tokens in property values.\n Note: In many cases, spaces will in fact be\n required  between tokens in order to distinguish them from\neach other. For example, the value '1em2em' would be parsed as a\nsingle  DIMEN  token with the number '1' and the identifier\n'em2em', which is an invalid unit. In this case, a space would be\nrequired before the '2' to get this parsed as the two lengths '1em'\nand '2em'.\n 1.4.2.2  Initial \n This part specifies the property's initial value. Please consult\nthe section on  the cascade  for information\nabout the interaction between style sheet-specified, inherited, and\ninitial property values.\n 1.4.2.3  Applies to \n This part lists the elements to which the property applies. All\nelements are considered to have all properties, but some properties\nhave no rendering effect on some types of elements. For example, the  'clear'  property only affects block-level elements.\n 1.4.2.4  Inherited \n This part indicates whether the value of the property is inherited\nfrom an ancestor element. Please consult the section on  the cascade  for information about the\ninteraction between style sheet-specified, inherited, and initial\nproperty values.\n 1.4.2.5  Percentage values \n This part indicates how percentages should be interpreted, if they occur in\nthe value of the property. If \"N/A\" appears here, it means that the\nproperty does not accept percentages in its values.\n 1.4.2.6  Media groups \n This part indicates the  media\ngroups  to which the property applies. Information about media\ngroups is non-normative.\n 1.4.2.7  Computed value \n This part describes the computed value for the property. See the\nsection on  computed values \nfor how this definition is used.\n 1.4.3  Shorthand properties \n Some properties are  shorthand properties , meaning that they allow\nauthors to specify the values of several properties with a single\nproperty.\n For instance, the  'font'  property\nis a shorthand property for setting  'font-style' ,  'font-variant' ,  'font-weight' ,  'font-size' ,  'line-height' , and  'font-family'  all at once. \n When values are omitted from a shorthand form, each\n\"missing\" property is assigned\nits initial value (see the section on  the\ncascade ).\n Example(s): \nThe multiple style rules of this example: \nh1 { \n  font-weight: bold; \n  font-size: 12pt;\n  line-height: 14pt; \n  font-family: Helvetica; \n  font-variant: normal;\n  font-style: normal;\n}\n may be rewritten with a single shorthand property: \nh1 { font: bold 12pt/14pt Helvetica }\n In this example,  'font-variant' , and  'font-style'  \ntake their initial values. \n 1.4.4  Notes and examples \n All examples that illustrate illegal usage are clearly\nmarked as \"ILLEGAL EXAMPLE\".\n HTML examples lacking DOCTYPE declarations are SGML Text Entities\nconforming to the HTML 4.01 Strict DTD  [HTML4] . Other HTML examples\nconform to the DTDs given in the examples.\n All notes are informative only.\n Examples and notes are  marked within\nthe source HTML  for the specification and CSS user agents will\nrender them specially.\n 1.4.5  Images and long descriptions \n Most images in the electronic version of this specification are\naccompanied by \"long descriptions\" of what they represent.  A link to\nthe long description is denoted by a \"[D]\" after the image.\n Images and long descriptions are informative only.\n 1.5  Acknowledgments \n This section is non-normative.\n CSS 2.1 is based on CSS2. See the  acknowledgments\nsection of CSS2  for the people that contributed to CSS2.\n We would like to thank the following people who, through their\ninput and feedback on the www-style mailing list, have helped us with\nthe creation of this specification:\n\t  Andrew Clover , \n\t  Bernd Mielke , \n\t  C. Bottelier , \n\t  Christian Roth , \n\t  Christoph P\u00e4per ,\n\t  Claus F\u00e4rber , \n\t  Coises , \n\t  Craig Saila , \n\t  Darren Ferguson , \n\t  Dylan Schiemann , \n\t  Etan Wexler , \n\t  George Lund , \n\t  James Craig , \n\t  Jan \n Eirik \n Olufsen , \n\t  Jan \n Roland \n Eriksson , \n\t  Joris Huizer , \n\t  Joshua Prowse , \n\t  Kai Lahmann , \n\t  Kevin Smith , \n\t  Lachlan Cannon , \n\t  Lars Knoll , \n\t  Lauri Raittila , \n\t  Mark Gallagher , \n\t  Michael Day , \n\t  Peter Sheerin , \n\t  Rijk \n van Geijtenbeek , \n\t  Robin Berjon , \n\t  Scott Montgomery , \n\t  Shelby Moore , \n\t  Stuart Ballard , \n\t  Tom Gilder , \n\t  Vadim Plessky ,\n\t  Peter Moulder ,\n\t  Anton Prowse ,\n\t  G\u00e9rard Talbot ,\n\t  Ingo Chao ,\n\t  Bruno Fassino ,\n\t  Justin Rogers ,\n\t  Boris Zbarsky ,\n\t  Garrett Smith ,\n\t  Zack Weinberg ,\n\t  Bjoern Hoehrmann ,\n\t and the \n\t  Open eBook Publication Structure Working Group  \n\t Editors. We would also like to thank \n\t  Gary Schnabl ,\n\t  Glenn Adams  and \n\t  Susan Lesch  \n\t who helped proofread earlier versions of this document. \n In addition, we would like to extend special thanks to \n\t  Elika J. Etemad , \n\t  Ada Chan  and \n\t  Boris Zbarsky  \n\t who have contributed significant time to CSS\u00a02.1, and to \n\t  Kimberly Blessing  \n\t for help with the editing. \n Many thanks also to the following people for their help\n\twith the test suite:\n\t  Robert Stam ,\n\t  Aharon Lanin ,\n\t  Alan Gresley ,\n\t  Alan Harder ,\n\t  Alexander Dawson ,\n\t  Arron Eicholz ,\n\t  Bernd Mielke ,\n\t  Bert Bos ,\n\t  Boris Zbarsky ,\n\t  Bruno Fassino ,\n\t  Daniel Schattenkirchner ,\n\t  David Hammond ,\n\t  David Hyatt ,\n\t  Eira Monstad ,\n\t  Elika J. Etemad ,\n\t  G\u00e9rard Talbot ,\n\t  Gabriele Romanato ,\n\t  Germain Garand ,\n\t  Hilbrand Edskes ,\n\t  Ian Hickson ,\n\t  James Hopkins ,\n\t  Justin Boss ,\n\t  L. David Baron ,\n\t  Lachlan Hunt ,\n\t  Magne Andersson ,\n\t  Marc Pacheco ,\n\t  Mark McKenzie-Bell ,\n\t  Matt Bradley ,\n\t  Melinda Grant ,\n\t  Michael Turnwall ,\n\t  Ray Kiddy ,\n\t  Richard Ishida ,\n\t  Robert O'Callahan ,\n\t  Simon Montagu ,\n\t  Tom Clancy ,\n\t  Vasil Dinkov ,\n\t \u2026 and all the contributors to the CSS1 test suite.\n\t  Working Group members active during the development of this\n\t specification:\n\t  C\u00e9sar Acebal  ( Universidad de Oviedo ) ,\n\t  Tab Atkins Jr.  ( Google, Inc. ) ,\n\t  L. David Baron  ( Mozilla Foundation ) ,\n\t  Bert Bos  ( W3C/ERCIM ) ,\n\t  Tantek \u00c7elik  ( W3C Invited Experts ) ,\n\t  Cathy Chan  ( Nokia ) ,\n\t  Giorgi Chavchanidze  ( Opera Software ) ,\n\t  John Daggett  ( Mozilla Foundation ) ,\n\t  Beth Dakin  ( Apple, Inc. ) ,\n\t  Arron Eicholz  ( Microsoft Corp. ) ,\n\t  Elika J. Etemad  ( W3C Invited Experts ) ,\n\t  Simon Fraser  ( Apple, Inc. ) ,\n\t  Sylvain Galineau  ( Microsoft Corp. ) ,\n\t  Daniel Glazman  ( Disruptive Innovations ) ,\n\t  Molly Holzschlag  ( Opera Software ) ,\n\t  David Hyatt  ( Apple, Inc. ) ,\n\t  Richard Ishida  ( W3C/ERCIM ) ,\n\t  John Jansen  ( Microsoft Corp. ) ,\n\t  Brad Kemper  ( W3C Invited Experts ) ,\n\t  H\u00e5kon Wium Lie  ( Opera Software ) ,\n\t  Chris Lilley  ( W3C/ERCIM ) ,\n\t  Peter Linss  ( HP ) ,\n\t  Markus Mielke  ( Microsoft Corp. ) ,\n\t  Alex Mogilevsky  ( Microsoft Corp. ) ,\n\t  David Singer  ( Apple Inc. ) ,\n\t  Anne van Kesteren  ( Opera Software ) ,\n\t  Steve Zilles  ( Adobe Systems Inc. ) ,\n\t  Ian Hickson  ( Google, Inc. ) ,\n\t  Melinda Grant  ( HP ) ,\n\t  \u00d8yvind Stenhaug  ( Opera Software ) ,\n\t and\n\t  Paul Nelson  ( Microsoft Corp. ) .\n previous  \u00a0\n next  \u00a0\n contents  \u00a0\n properties  \u00a0\n index"}