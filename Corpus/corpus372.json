{"url": "https://en.wikipedia.org/wiki/Backup", "content": "Backup - Wikipedia \n Backup   \n From Wikipedia, the free encyclopedia   \n\t\t\t\t\tJump to:\t\t\t\t\t navigation , \t\t\t\t\t search \n This article is about backup in computer systems. For other uses, see  Backup (disambiguation) . \n In  information technology , a  backup , or the process of backing up, refers to the copying and  archiving  of computer  data  so it may be used to  restore  the original after a  data loss  event. The verb form is to  back up  in two words, whereas the noun is  backup . [1] \n Backups have two distinct purposes. The primary purpose is to recover data after its loss, be it by  data deletion  or  corruption . Data loss can be a common experience of computer users; a 2008 survey found that 66% of respondents had lost files on their home PC. [2]  The secondary purpose of backups is to recover data from an earlier time, according to a user-defined  data retention  policy, typically configured within a  backup application  for how long copies of data are required. Though backups represent a simple form of  disaster recovery , and should be part of any  disaster recovery plan , backups by themselves should not be considered a complete disaster recovery plan. One reason for this is that not all backup systems are able to reconstitute a computer system or other complex configuration such as a  computer cluster ,  active directory  server, or  database server  by simply restoring data from a backup. \n Since a backup system contains at least one copy of all data considered worth saving, the  data storage  requirements can be significant. Organizing this storage space and managing the backup process can be a complicated undertaking. A data repository model may be used to provide structure to the storage. Nowadays, there are many different types of  data storage devices  that are useful for making backups. There are also many different ways in which these devices can be arranged to provide geographic redundancy,  data security , and portability. \n Before data are sent to their storage locations, they are selected, extracted, and manipulated. Many different techniques have been developed to optimize the backup procedure. These include optimizations for dealing with open files and live data sources as well as compression, encryption, and  de-duplication , among others. Every backup scheme should include  dry runs  that validate the reliability of the data being backed up. It is important to recognize the limitations and human factors involved in any backup scheme. \n Contents \n 1   Storage, the base of a backup system \n 1.1   Data repository models \n 1.2   Storage media \n 1.3   Managing the data repository \n 2   Selection and extraction of data \n 2.1   Files \n 2.2   Filesystems \n 2.3   Live data \n 2.4   Metadata \n 3   Manipulation of data and dataset optimization \n 4   Managing the backup process \n 4.1   Objectives \n 4.2   Limitations \n 4.3   Implementation \n 4.4   Measuring the process \n 5   Enterprise client-server backup \n 5.1   Performance \n 5.2   User interface \n 5.3   Disk volumes\u2014known as sources\u2014whose files are backed up \n 5.4   LAN/WAN/Cloud \n 6   See also \n 7   References \n 8   External links \n Storage, the base of a backup system [ edit ] \n Data repository models [ edit ] \n Any backup strategy starts with a concept of a data repository. The backup data needs to be stored, and probably should be organized to a degree. The organisation could be as simple as a sheet of paper with a list of all backup media (CDs etc.) and the dates they were produced. A more sophisticated setup could include a computerized index, catalog, or relational database. Different approaches have different advantages. Part of the model is the  backup rotation scheme . \n Unstructured\u00a0 \n An unstructured repository may simply be a stack of or CD-Rs or DVD-Rs with minimal information about what was backed up and when. This is the easiest to implement, but probably the least likely to achieve a high level of recoverability as it lacks automation. \n Full only /  System imaging \u00a0 \n A repository of this type contains complete system images taken at one or more specific points in time. This technology is frequently used by computer technicians to record known good configurations. Imaging [3]  is generally more useful for deploying a standard configuration to many systems rather than as a tool for making ongoing backups of diverse systems. \n Incremental \u00a0 \n An incremental style repository aims to make it more feasible to store backups from more points in time by organizing the data into increments of change between points in time. This eliminates the need to store duplicate copies of unchanged data: with full backups a lot of the data will be unchanged from what has been backed up previously. Typically, a  full  backup (of all files) is made on one occasion (or at infrequent intervals) and serves as the reference point for an incremental backup set. After that, a number of  incremental  backups are made after successive time periods. Restoring the whole system to the date of the last incremental backup would require starting from the last full backup taken before the data loss, and then applying in turn each of the incremental backups since then. [4]  Additionally, some backup systems can reorganize the repository to synthesize full backups from a series of incrementals. \n Differential \u00a0 \n Each differential backup saves the data that has changed since the last full backup. It has the advantage that only a maximum of two data sets are needed to restore the data. One disadvantage, compared to the incremental backup method, is that as time from the last full backup (and thus the accumulated changes in data) increases, so does the time to perform the differential backup. Restoring an entire system would require starting from the most recent full backup and then applying just the last differential backup since the last full backup.\n Note: Vendors have standardized on the meaning of the terms \"incremental backup\" and \"differential backup\". However, there have been cases where conflicting definitions of these terms have been used. The most relevant characteristic of an incremental backup is which reference point it uses to check for changes. By standard definition, a differential backup copies files that have been created or changed since the last full backup, regardless of whether any other differential backups have been made since then, whereas an incremental backup copies files that have been created or changed since the most recent backup of any type (full or incremental). Other variations of incremental backup include multi-level incrementals and incremental backups that compare parts of files instead of just the whole file. \n Reverse delta\u00a0 \n A reverse delta type repository stores a recent \"mirror\" of the source data and a series of differences between the mirror in its current state and its previous states. A reverse delta backup will start with a normal full backup. After the full backup is performed, the system will periodically synchronize the full backup with the live copy, while storing the data necessary to reconstruct older versions. This can either be done using  hard links , or using binary  diffs . This system works particularly well for large, slowly changing, data sets. \n Continuous data protection \u00a0 \n Instead of scheduling periodic backups, the system immediately logs every change on the host system. This is generally done by saving byte or block-level differences rather than file-level differences. [5]  It differs from simple  disk mirroring  in that it enables a roll-back of the log and thus restoration of old images of data. \n Storage media [ edit ] \nFrom left to right, a  DVD  disc in plastic cover, a  USB flash drive  and an  external hard drive \n Regardless of the repository model that is used, the data has to be stored on some data storage medium. \n Magnetic tape \u00a0 \n Magnetic tape has long been the most commonly used medium for bulk data storage, backup, archiving, and interchange. Tape has typically had an order of magnitude better capacity-to-price ratio when compared to hard disk, but recently the ratios for tape and hard disk have become a lot closer. [6]  There are many formats, many of which are proprietary or specific to certain markets like mainframes or a particular brand of personal computer. Tape is a  sequential access  medium, so even though access times may be poor, the rate of continuously writing or reading data can actually be very fast. Some new tape drives are even faster than modern hard disks. \n Hard disk \n The capacity-to-price ratio of hard disk has been rapidly improving for many years. This is making it more competitive with magnetic tape as a bulk storage medium. The main advantages of hard disk storage are low access times, availability, capacity and ease of use. [7]  External disks can be connected via local interfaces like  SCSI ,  USB ,  FireWire , or  eSATA , or via longer distance technologies like  Ethernet ,  iSCSI , or  Fibre Channel . Some disk-based backup systems, such as Virtual Tape Libraries, support  data deduplication  which can dramatically reduce the amount of disk storage capacity consumed by daily and weekly backup data. The main disadvantages of hard disk backups are that they are easily damaged, especially while being transported (e.g., for off-site backups), and that their stability over periods of years is a relative unknown. \n Optical storage \u00a0 \n Recordable  CDs ,  DVDs , and  Blu-ray Discs  are commonly used with personal computers and generally have low media unit costs. However, the capacities and speeds of these and other optical discs are typically an order of magnitude lower than hard disk or tape. Many optical disk formats are  WORM  type, which makes them useful for archival purposes since the data cannot be changed. The use of an auto-changer or jukebox can make optical discs a feasible option for larger-scale backup systems. Some optical storage systems allow for cataloged data backups without human contact with the discs, allowing for longer data integrity. \n Solid state storage \u00a0 \n Also known as  flash memory ,  thumb drives ,  USB flash drives ,  CompactFlash ,  SmartMedia ,  Memory Stick ,  Secure Digital cards , etc., these devices are relatively expensive for their low capacity in comparison to hard disk drives, but are very convenient for backing up relatively low data volumes. A  solid-state drive  does not contain any movable parts unlike its magnetic drive counterpart, making it less susceptible to physical damage, and can have huge throughput in the order of 500Mbit/s to 6Gbit/s. The capacity offered from SSDs continues to grow and prices are gradually decreasing as they become more common. \n Remote backup service \u00a0 \n As  broadband Internet access  becomes more widespread, remote backup services are gaining in popularity. Backing up via the Internet to a remote location can protect against some worst-case scenarios such as fires, floods, or earthquakes which would destroy any backups in the immediate vicinity along with everything else. There are, however, a number of drawbacks to remote backup services. First, Internet connections are usually slower than local data storage devices. Residential broadband is especially problematic as routine backups must use an upstream link that's usually much slower than the downstream link used only occasionally to retrieve a file from backup. This tends to limit the use of such services to relatively small amounts of high value data. Secondly, users must trust a third party service provider to maintain the privacy and integrity of their data, although confidentiality can be assured by encrypting the data before transmission to the backup service with an  encryption key  known only to the user. Ultimately the backup service must itself use one of the above methods so this could be seen as a more complex way of doing traditional backups. \n Floppy disk \u00a0 \n During the 1980s and early 1990s, many personal/home computer users associated backing up mostly with copying to floppy disks. However, the data capacity of floppy disks failed to catch up with growing demands, rendering them effectively obsolete. \n Managing the data repository [ edit ] \n Regardless of the data repository model, or data storage media used for backups, a balance needs to be struck between accessibility, security and cost. These media management methods are not mutually exclusive and are frequently combined to meet the user's needs. Using on-line disks for staging data before it is sent to a near-line  tape library  is a common example. \n On-line \u00a0 \n On-line backup storage is typically the most accessible type of data storage, which can begin restore in milliseconds of time. A good example is an internal hard disk or a  disk array  (maybe connected to  SAN ). This type of storage is very convenient and speedy, but is relatively expensive. On-line storage is quite vulnerable to being deleted or overwritten, either by accident, by intentional malevolent action, or in the wake of a data-deleting  virus  payload. \n Near-line \u00a0 \n Near-line storage is typically less accessible and less expensive than on-line storage, but still useful for backup data storage. A good example would be a  tape library  with restore times ranging from seconds to a few minutes. A mechanical device is usually used to move media units from storage into a drive where the data can be read or written. Generally it has safety properties similar to on-line storage. \n Off-line \u00a0 \n Off-line storage requires some direct human action to provide access to the storage media: for example inserting a tape into a tape drive or plugging in a cable. Because the data are not accessible via any computer except during limited periods in which they are written or read back, they are largely immune to a whole class of on-line backup failure modes. Access time will vary depending on whether the media are on-site or off-site. \n Off-site data protection \n To protect against a disaster or other site-specific problem, many people choose to send backup media to an off-site vault. The vault can be as simple as a system administrator's home office or as sophisticated as a disaster-hardened, temperature-controlled, high-security bunker with facilities for backup media storage. Importantly a data replica  can  be off-site but also  on-line  (e.g., an off-site  RAID  mirror). Such a replica has fairly limited value as a backup, and should not be confused with an off-line backup. \n Backup site  or disaster recovery center (DR center) \n In the event of a disaster, the data on backup media will not be sufficient to recover. Computer systems onto which the data can be restored and properly configured networks are necessary too. Some organizations have their own data recovery centers that are equipped for this scenario. Other organizations contract this out to a third-party recovery center. Because a DR site is itself a huge investment, backing up is very rarely considered the preferred method of moving data to a DR site. A more typical way would be remote  disk mirroring , which keeps the DR data as up to date as possible. \n Selection and extraction of data [ edit ] \n A successful backup job starts with selecting and extracting coherent units of data. Most data on modern computer systems is stored in discrete units, known as  files . These files are organized into  filesystems . Files that are actively being updated can be thought of as \"live\" and present a challenge to back up. It is also useful to save metadata that describes the computer or the filesystem being backed up. \n Deciding what to back up at any given time is a harder process than it seems. By backing up too much redundant data, the data repository will fill up too quickly. Backing up an insufficient amount of data can eventually lead to the loss of critical information. \n Files [ edit ] \n Copying files \u00a0 \n With  file-level  approach, making copies of files is the simplest and most common way to perform a backup. A means to perform this basic function is included in all backup software and all operating systems. \n Partial file copying \n Instead of copying whole files, one can limit the backup to only the blocks or bytes within a file that have changed in a given period of time. This technique can use substantially less storage space on the backup medium, but requires a high level of sophistication to reconstruct files in a restore situation. Some implementations require integration with the source file system. \n Deleted files\u00a0 \n To prevent the unintentional restoration of files that have been intentionally deleted, a record of the deletion must be kept. [8] \n Filesystems [ edit ] \n Filesystem dump \n Instead of copying files within a file system, a copy of the whole filesystem itself in  block-level  can be made. This is also known as a  raw partition backup  and is related to  disk imaging . The process usually involves unmounting the filesystem and running a program like  dd (Unix) . Because the disk is read sequentially and with large buffers, this type of backup can be much faster than reading every file normally, especially when the filesystem contains many small files, is highly fragmented, or is nearly full. But because this method also reads the free disk blocks that contain no useful data, this method can also be slower than conventional reading, especially when the filesystem is nearly empty. Some filesystems, such as  XFS , provide a \"dump\" utility that reads the disk sequentially for high performance while skipping unused sections. The corresponding restore utility can selectively restore individual files or the entire volume at the operator's choice. \n Identification of changes \n Some filesystems have an  archive bit  for each file that says it was recently changed. Some backup software looks at the date of the file and compares it with the last backup to determine whether the file was changed. \n Versioning file system \u00a0 \n A versioning filesystem keeps track of all changes to a file and makes those changes accessible to the user. Generally this gives access to any previous version, all the way back to the file's creation time. An example of this is the Wayback versioning filesystem for Linux. [9] \n Live data [ edit ] \n If a computer system is in use while it is being backed up, the possibility of files being open for reading or writing is real. If a file is open, the contents on disk may not correctly represent what the owner of the file intends. This is especially true for database files of all kinds. The term  fuzzy backup  can be used to describe a backup of live data that looks like it ran correctly, but does not represent the state of the data at any single point in time. This is because the data being backed up changed in the period of time between when the backup started and when it finished. For databases in particular, fuzzy backups are worthless. [ citation needed ] \n Snapshot  backup \n A snapshot is an instantaneous function of some storage systems that presents a copy of the file system as if it were frozen at a specific point in time, often by a  copy-on-write  mechanism. An effective way to back up live data is to temporarily  quiesce  them (e.g. close all files), take a snapshot, and then resume live operations. At this point the snapshot can be backed up through normal methods. [10]  While a snapshot is very handy for viewing a filesystem as it was at a different point in time, it is hardly an effective backup mechanism by itself. \n Open file backup \n Many backup software packages feature the ability to handle open files in backup operations. Some simply check for openness and try again later.  File locking  is useful for regulating access to open files. \n When attempting to understand the logistics of backing up open files, one must consider that the backup process could take several minutes to back up a large file such as a database. In order to back up a file that is in use, it is vital that the entire backup represent a single-moment snapshot of the file, rather than a simple copy of a read-through. This represents a challenge when backing up a file that is constantly changing. Either the database file must be locked to prevent changes, or a method must be implemented to ensure that the original snapshot is preserved long enough to be copied, all while changes are being preserved. Backing up a file while it is being changed, in a manner that causes the first part of the backup to represent data  before  changes occur to be combined with later parts of the backup  after  the change results in a corrupted file that is unusable, as most large files contain internal references between their various parts that must remain consistent throughout the file. \n Cold database backup \n During a cold backup, the database is closed or locked and not available to users. The datafiles do not change during the backup process so the database is in a consistent state when it is returned to normal operation. [11] \n Hot database backup \n Some database management systems offer a means to generate a backup image of the database while it is online and usable (\"hot\"). This usually includes an inconsistent image of the data files plus a log of changes made while the procedure is running. Upon a restore, the changes in the log files are reapplied to bring the copy of the database up-to-date (the point in time at which the initial hot backup ended). [12] \n Metadata [ edit ] \n Not all information stored on the computer is stored in files. Accurately recovering a complete system from scratch requires keeping track of this non-file data too.  [13] \n System description \n System specifications are needed to procure an exact replacement after a disaster. \n Boot sector \u00a0 \n The boot sector can sometimes be recreated more easily than saving it. Still, it usually isn't a normal file and the system won't boot without it. \n Partition  layout \n The layout of the original disk, as well as partition tables and filesystem settings, is needed to properly recreate the original system. \n File  metadata \u00a0 \n Each file's permissions, owner, group, ACLs, and any other metadata need to be backed up for a restore to properly recreate the original environment. \n System metadata \n Different operating systems have different ways of storing configuration information.  Microsoft Windows  keeps a  registry  of system information that is more difficult to restore than a typical file. \n Manipulation of data and dataset optimization [ edit ] \n It is frequently useful or required to manipulate the data being backed up to optimize the backup process. These manipulations can provide many benefits including improved backup speed, restore speed, data security, media usage and/or reduced bandwidth requirements. \n Compression \u00a0 \n Various schemes can be employed to shrink the size of the source data to be stored so that it uses less storage space. Compression is frequently a built-in feature of tape drive hardware. \n Deduplication \u00a0 \n When multiple similar systems are backed up to the same destination storage device, there exists the potential for much redundancy within the backed up data. For example, if 20 Windows workstations were backed up to the same data repository, they might share a common set of system files. The data repository only needs to store one copy of those files to be able to restore any one of those workstations. This technique can be applied at the file level or even on raw blocks of data, potentially resulting in a massive reduction in required storage space. Deduplication can occur on a server before any data moves to backup media, sometimes referred to as source/client side deduplication. This approach also reduces bandwidth required to send backup data to its target media. The process can also occur at the target storage device, sometimes referred to as inline or back-end deduplication. \n Duplication \u00a0 \n Sometimes backup jobs are duplicated to a second set of storage media. This can be done to rearrange the backup images to optimize restore speed or to have a second copy at a different location or on a different storage medium. \n Encryption \u00a0 \n High capacity removable storage media such as backup tapes present a data security risk if they are lost or stolen. [14]  Encrypting the data on these media can mitigate this problem, but presents new problems. Encryption is a CPU intensive process that can slow down backup speeds, and the security of the encrypted backups is only as effective as the security of the key management policy. \n Multiplexing \u00a0 \n When there are many more computers to be backed up than there are destination storage devices, the ability to use a single storage device with several simultaneous backups can be useful. \n Refactoring \n The process of rearranging the backup sets in a data repository is known as refactoring. For example, if a backup system uses a single tape each day to store the incremental backups for all the protected computers, restoring one of the computers could potentially require many tapes. Refactoring could be used to consolidate all the backups for a single computer onto a single tape. This is especially useful for backup systems that do  incrementals forever  style backups. \n Staging \u00a0 \n Sometimes backup jobs are copied to a staging disk before being copied to tape. This process is sometimes referred to as D2D2T, an acronym for Disk to Disk to Tape. This can be useful if there is a problem matching the speed of the final destination device with the source device as is frequently faced in network-based backup systems. It can also serve as a centralized location for applying other data manipulation techniques. \n Managing the backup process [ edit ] \n This article  needs additional citations for  verification .  Please help  improve this article  by  adding citations to reliable sources . Unsourced material may be challenged and removed.   (September 2014)   ( Learn how and when to remove this template message ) \n As long as new data are being created and changes are being made, backups will need to be performed at frequent intervals. Individuals and organizations with anything from one computer to thousands of computer systems all require protection of data. The scales may be very different, but the objectives and limitations are essentially the same. Those who perform backups need to know how successful the backups are, regardless of scale. \n Objectives [ edit ] \n Recovery point objective  (RPO)\u00a0 \n The point in time that the restarted infrastructure will reflect. Essentially, this is the roll-back that will be experienced as a result of the recovery. The most desirable RPO would be the point just prior to the data loss event. Making a more recent recovery point achievable requires increasing the frequency of  synchronization  between the source data and the backup repository. [15] [16] \n Recovery time objective  (RTO)\u00a0 \n The amount of time elapsed between disaster and restoration of business functions. [17] \n Data security \u00a0 \n In addition to preserving access to data for its owners, data must be restricted from unauthorized access. Backups must be performed in a manner that does not compromise the original owner's undertaking. This can be achieved with data encryption and proper media handling policies. \n Data retention  period\u00a0 \n Regulations and policy can lead to situations where backups are expected to be retained for a particular period, but not any further. Retaining backups after this period can lead to unwanted liability and sub-optimal use of storage media. \n Limitations [ edit ] \n An effective backup scheme will take into consideration the limitations of the situation. \n Backup window \n The period of time when backups are permitted to run on a system is called the backup window. This is typically the time when the system sees the least usage and the backup process will have the least amount of interference with normal operations. The backup window is usually planned with users' convenience in mind. If a backup extends past the defined backup window, a decision is made whether it is more beneficial to abort the backup or to lengthen the backup window. \n Performance impact \n All backup schemes have some performance impact on the system being backed up. For example, for the period of time that a computer system is being backed up, the hard drive is busy reading files for the purpose of backing up, and its full bandwidth is no longer available for other tasks. Such impacts should be analyzed. \n Costs of hardware, software, labor \n All types of storage media have a finite capacity with a real cost. Matching the correct amount of storage capacity (over time) with the backup needs is an important part of the design of a backup scheme. Any backup scheme has some labor requirement, but complicated schemes have considerably higher labor requirements. The cost of commercial backup software can also be considerable. \n Network bandwidth \n Distributed backup systems can be affected by limited network bandwidth. \n Implementation [ edit ] \n Meeting the defined objectives in the face of the above limitations can be a difficult task. The tools and concepts below can make that task more achievable. \n Scheduling \n Using a  job scheduler  can greatly improve the reliability and consistency of backups by removing part of the human element. Many backup software packages include this functionality. \n Authentication \n Over the course of regular operations, the user accounts and/or system agents that perform the backups need to be authenticated at some level. The power to copy all data off of or onto a system requires unrestricted access. Using an authentication mechanism is a good way to prevent the backup scheme from being used for unauthorized activity. \n Chain of trust\u00a0 \n Removable  storage media  are physical items and must only be handled by trusted individuals. Establishing a chain of trusted individuals (and vendors) is critical to defining the security of the data. \n Measuring the process [ edit ] \n To ensure that the backup scheme is working as expected, key factors should be monitored and historical data maintained. \n Backup validation \u00a0 \n (also known as \"backup success validation\") Provides information about the backup, and proves compliance to regulatory bodies outside the organization: for example, an insurance company in the USA might be required under  HIPAA  to demonstrate that its client data meet records retention requirements. [18]  Disaster, data complexity, data value and increasing dependence upon ever-growing volumes of data all contribute to the anxiety around and dependence upon successful backups to ensure  business continuity . Thus many organizations rely on third-party or \"independent\" solutions to test, validate, and optimize their backup operations (backup reporting). \n Reporting \n In larger configurations, reports are useful for monitoring media usage, device status, errors, vault coordination and other information about the backup process. \n Logging \n In addition to the history of computer generated reports, activity and change logs are useful for monitoring backup system events. \n Validation \n Many backup programs use  checksums  or  hashes  to validate that the data was accurately copied. These offer several advantages. First, they allow data integrity to be verified without reference to the original file: if the file as stored on the backup medium has the same checksum as the saved value, then it is very probably correct. Second, some backup programs can use checksums to avoid making redundant copies of files, and thus improve backup speed. This is particularly useful for the de-duplication process. \n Monitored backup \n Backup processes are monitored by a third party monitoring center, which alerts users to any errors that occur during automated backups. Monitored backup requires software capable of pinging [ clarification needed ]  the monitoring center's servers in the case of errors. Some monitoring services also allow collection of historical meta-data, that can be used for Storage Resource Management purposes like projection of data growth, locating redundant primary storage capacity and reclaimable backup capacity. \n Enterprise client-server backup [ edit ] \n \"Enterprise client-server\" backup software describes a class of software that backs up data from a variety of client computers centrally to one or more server computers, with the particular needs of  enterprises  in mind. It may employ a scripted [19]  client\u2013server backup model  [20]  with a backup  server  application running on one computer, and with small-footprint  client  applications running on the other computers being backed up, in either a single platform or  mixed platform network . Enterprise-specific requirements  [20]  include the need to back up large amounts of data on a systematic basis, to adhere to legal requirements for the maintenance and archiving of files and data, and to satisfy short-recovery-time objectives. To satisfy these requirements, which World Backup Day (March 31st) [21] [22] [23]  highlights, it is typical for an enterprise to appoint a backup administrator, who is a part of office administration rather than of the IT staff, and whose role is \"being the keeper of the data\". [24] \n Performance [ edit ] \n The  steady improvement in hard disk drive price per byte  has made feasible a disk-to-disk-to-tape strategy, combining the speed of disk backup and restore with the capacity and low cost of tape for offsite archival and disaster recovery purposes. [25]  This has led to features such as: \n Improved disk-to-disk-to-tape capabilities \n Enable automated transfers to tape for safe offsite storage of disk backups that were created for fast onsite restores. [26] [27] \n Create synthetic full backups \n For example onto tapes from existing disk backups\u2014by copying multiple backups of the same source(s) from one set of backups to another. This is termed a  \"synthetic full backup\"  because, after the transfer, the destination set of backups contains the same data it would after a full backup. [26] [28] \n Automated data grooming \n Frees up space on disk backups by removing out-of-date backup data based on an administrator-defined retention period. [20] [26] [23]  One method of removing data is to keep the last backup of each day/week/month for the last respective week/month/specified-number-of-months, permitting compliance with regulatory requirements. [29]  One application has a \"performance-optimized grooming\" mode that only removes outdated information from a set of backups that it can quickly delete. [30]  This is the only mode of grooming allowed for cloud sets of backups, and is also up to 5 times as fast when used on locally stored disk sets of backups. The \"storage-optimized grooming\" mode reclaims more space because it rewrites the set of backups. \n Multithreaded backup server \n Capable of simultaneously performing multiple backup, restore, and copy operations in separate \"activity threads\". [20] [31]  In one application, all the categories of information for a particular \"backup server\" are stored by it; when an  \"Administration Console\"  process is started, its process synchronizes information with all running LAN/WAN backup servers. [32] \n Block-level incremental backup \n The ability to back up only the blocks of a file that have changed, a  refinement of incremental backup  that saves space and may save time. [20] [33] \n Pre-scanning of client volumes \n Reduces scanning time on both backups, fitting more sources into the  backup window , [20] [34]  and restores. [35] \n \"Multiplexed backup\" \n One application has the capability of sending data from multiple clients to a single tape drive simultaneously; \"this is useful for low end clients with slow throughput ... [that] cannot send data fast enough to keep the tape drive busy.\" [31] \n User interface [ edit ] \n To accommodate the requirements of a backup administrator who may not be part of the IT staff with access to the secure server area, enterprise client-server software may include features such as: \n Administration Console \n The backup administrator's backup server  GUI  management and near-term reporting tool. [36]  Its window shows the selected backup server, with a standard toolbar on top. A sidebar on the left shows the clickable categories of backup server information for it; each category shows a panel with a specialized toolbar below or in place of the standard toolbar. The built-in categories include activities, past backups, scripts, sources (directly or indirectly), sets of backups, and storage devices. \n User-initiated backups and restores \n These supplement the administrator-initiated backups and restores which backup applications have always had, and relieve the administrator of time-consuming tasks. [20]  The user designates the date of the past backup from which files or folders are to be restored\u2014once IT staff has mounted the proper backup volume on the backup server. [25] [37] [38] \n High-level/long-term reports supplementing the Administration Console [36] \n Within one application's Console panel displayed by clicking the name of the backup server itself in the sidebar, an activities pane on the top left of the displayed  Dashboard  has a moving bar graph for each activity going on for the backup server together with a pause and stop button for the activity. Three more panes give the results of activities in the past week. Finally a storage pane has a line for each set of backups, showing the last-modified date and depictions of the total bytes used and available. [29]   [37]  For the application's Windows variant, the Dashboard acts as a display-only substitute for a non-existent Console. [39]  Another application has a separate reporting facility that can cover multiple backup servers. [40] \n E-mailing of notifications about operations to chosen recipients [36] \n Can alert the recipient to, e.g., errors or warnings, with a log to assist in pinpointing problems. [39] [40] \n Integration with monitoring systems  [36] \n One application's administrators can deploy custom scripts that\u2014invoking  webhooks \u2014populate  such systems  as the freeware  Nagios  and  IFTTT  and the  freemium   Slack  with script successes and failures corresponding to the activities category of the Console, per-source backup information corresponding to the past backups category of the Console, and media requests. [37]  Another application has integration with two of the developer's monitoring systems, one that is part of the client-server backup application and one that is more generalized. [40] \n Disk volumes\u2014known as sources\u2014whose files are backed up [ edit ] \n \"Script Hooks\" \n One application allows integration of customized scripts that are executed at specific points during administrators' backup strategy lifecycle. These allow monitoring system integration. In addition, databases and other services can be quiesced before a backup starts and then relaunched after the backup completes successfully. [20] [37]  However another application accomplishes the same backup result via provisions for many specific databases and other service that may be purchased for the client software. [41] \n Avid  production tool support \n Supported in one application as sources for backup, copy/duplicate, archive, and restore scripts. [42] \n LAN/WAN/Cloud [ edit ] \n Advanced network client support \n All applications includes support for multiple network interfaces. [20] [43]  However one application, unless  deduplication is done by a separate sub-application between the client and the backup server , cannot provide \"resilient network connections\" for machines on a WAN. [44] \n Cloud seeding and Large-Scale Recovery \n \"Seeding\" is a service whereby a large volume of locally-stored backup data is loaded onto a large-capacity device, which is then physically shipped to the cloud storage site, and then uploaded. [45] [46]  After the large initial upload, the firm's backup software can be reconfigured to read from and write to the backup incrementally in its cloud location. [47]  The process can also be employed in reverse for faster large-scale data recovery times than would be possible via an Internet connection. [48] \n See also [ edit ] \n About backup \n Backup software \n List of backup software \n Glossary of backup terms \n Remote backup service \n Virtual backup appliance \n Related topics \n Data consistency \n Data degradation \n Data proliferation \n Database dump \n Digital preservation \n Disaster recovery and business continuity auditing \n File synchronization \n Information repository \n References [ edit ] \n ^   American Heritage Dictionary entry for  backup ,  American Heritage Dictionary entry for  back up \n ^   Global Backup Survey . Retrieved on 15 February 2009 \n ^   \"Five key questions to ask about your backup solution\" .  sysgen.ca . Retrieved  2015-09-23 . \u00a0 \n ^   Incremental Backup . Retrieved on 10 March 2006 \n ^   Continuous Protection white paper . (1 October 2005). Retrieved on 10 March 2007 \n ^   Disk to Disk Backup versus Tape - War or Truce?  (9 December 2004). Retrieved on 10 March 2007 \n ^   \"Bye Bye Tape, Hello 5.3TB eSATA\" . Retrieved  22 April  2007 . \u00a0 \n ^   How to Recover Deleted Files . \n ^   Wayback: A User-level V File System for Linux  (2004). Retrieved on 10 March 2007 \n ^   What is a Snapshot backup? . Retrieved on 10 March 2007 \n ^   Oracle Tips  (10 December 1997). Retrieved on 10 March 2007 \n ^   Oracle Tips  (10 December 1997). Retrieved on 10 March 2007 \n ^   Gre\u0161ovnik, Igor (April 2016).  \"Preparation of Bootable Media and Images\" . Archived from  the original  on 2016-04-25 . Retrieved  2016-04-21 . \u00a0 \n ^   Backups tapes a backdoor for identity thieves  (28 April 2004). Retrieved on 10 March 2007 \n ^   Definition of  recovery point objective . Retrieved on 10 March 2007 \n ^   \"Top four things to consider in business continuity planning\" .  sysgen.ca . Retrieved  2015-09-23 . \u00a0 \n ^   Definition of  recovery time objective . Retrieved on 7 March 2007 \n ^   HIPAA Advisory . Retrieved on 10 March 2007 \n ^   Kissell, Joe (2007).  Take Control of Mac OS X Backups   (PDF)  (Version 2.0 ed.). Ithaca, NY: TidBITS Electronic Publishing. pp.\u00a024 (client\u2013server), 165 (client\u2013server), 128 (subvolume).  ISBN \u00a0 0 - 9759503 - 0 - 4 . Retrieved  22 September  2017 . \u00a0 \n ^  a   b   c   d   e   f   g   h   i   Rassokhin?, Alexander? (2012).  \"Enterprise Network Backup Challenges\" .  All About Backup . Novosoft LLC . Retrieved  13 November  2017 . \u00a0 \n ^   Misener, Dan (29 March 2016).  \"World Backup Day highlights importance of protecting data\" .  CBC News . Radio-Canada. \u00a0 \n ^   Schmoll-Trautmann, Anja (31 March 2017).  \"World Backup Day: deutliche L\u00fccken zwischen Sicherheitsrisiko und Nutzerverhalten\" .  ZDNet  (in German).  CBS Interactive . \u00a0 \n ^  a   b   Preimesberger, Chris (31 March 2017).  \"World Backup Day 2017: 'We Don't Know the Day Nor the Hour ' \" .  eWeek . QuinStreet . Retrieved  11 November  2017 . \u00a0 \n ^   Dorion, Pierre (4 August 2008).  \"The true role of a backup administrator\" .  TechTarget . TechTarget, Inc . Retrieved  13 November  2017 .  On the other hand, the role of a backup administrator should be one of administration, not operation....whose role is \"being the keeper of the data\" \u00a0 \n ^  a   b   Fernando, Sal (30 April 2008).  \"Combine disk, tape benefits to protect data\" .  ZDNet . CBS Interactive . Retrieved  13 November  2017 . \u00a0 \n ^  a   b   c   \"New EMC Dantz Retrospect 7 Improves Data Protection for SMBs and the Distributed Enterprise\" .  DellEMC [current] . EMC Corp. [orig. publisher]. 31 January 2005 . Retrieved  23 November  2016 . \u00a0 \n ^   \"About NetBackup Replication Director\" .  Veritas Support . Veritas Technologies LLC (US). 2017-07-13 . Retrieved  18 November  2017 . \u00a0 \n ^   \"About synthetic backups\" .  Veritas Support . Veritas Technologies LLC (US). 2017-09-25 . Retrieved  18 November  2017 . \u00a0 \n ^  a   b   Schmitz, Agen (6 March 2014).  \"Retrospect 11\" .  TitBITS . TidBITS Publishing Inc . Retrieved  27 April  2017 . \u00a0 \n ^   Schmitz, Agen (5 March 2016).  \"Retrospect 13\" .  TitBITS . TidBITS Publishing Inc . Retrieved  27 October  2016 . \u00a0 \n ^  a   b   \"What is the difference between multiplexing and multistreaming?\" .  Veritas Support . Veritas Technologies LLC (US). 2015-01-29 . Retrieved  19 November  2017 . \u00a0 \n ^   Engst, Adam (23 March 2009).  \"EMC Ships Modernized Retrospect 8\" .  TidBITS . TidBITS Publishing Inc . Retrieved  12 September  2017 . \u00a0 \n ^   Whitehouse, Lauren (September 2008).  \"The pros and cons of file-level vs. block-level data deduplication technology\" .  TechTarget . Tech Target Inc . Retrieved  13 November  2017 . \u00a0 \n ^   \"About the Accelerator feature in NetBackup 7.5\" .  Veritas Support . Veritas Technologies LLC (US). 2017-11-10 . Retrieved  18 November  2017 . \u00a0 \n ^   Engst, Adam (6 November 2012).  \"Retrospect 10 Reduces Backup Time with Instant Scan Technology\" .  TidBITS . TidBITS Publishing Inc . Retrieved  25 October  2016 . \u00a0 \n ^  a   b   c   d   Dorion, Pierre (June 2008).  \"Why you need a data backup reporting tool\" .  TechTarget . Tech Target Inc . Retrieved  13 November  2017 . \u00a0 \n ^  a   b   c   d   \"Retrospect \u00ae 14.0 Mac User's Guide\"   (PDF) .  Retrospect . Retrospect Inc. March 2017 . Retrieved  28 March  2017 . \u00a0 \n ^   \"OpsCenter Operational Restore\" .  Veritas Support . Veritas Technologies LLC (US). 2012-03-12 . Retrieved  18 November  2017 . \u00a0 \n ^  a   b   \"Retrospect \u00ae 12 Windows User's Guide\"   (PDF) .  Retrospect . Retrospect Inc. 2017 . Retrieved  22 August  2017 . \u00a0 \n ^  a   b   c   Antony, Erica; Tim Burlowski (January 2008).  \"NetBackup Operations Manager: Monitoring, Alerting and Reporting for Veritas NetBackup\"   (PDF attachment) .  Symantec . Veritas Technologies LLC (US). pp.\u00a04\u20135(monitoring), 6\u20137(alerting), 7(3rdPartyEventMgmt.), 11\u201318(reporting) . Retrieved  18 November  2017 . \u00a0 \n ^   \"Veritas NetBackup \u2122 8.0 - 8.x.x Database and Application Agent Compatibility List\" .  Veritas . Veritas Technologies LLC (US). 17 November 2017 . Retrieved  19 November  2017 . \u00a0 \n ^   \"Knowledge Base\" .  Retrospect . Retrospect Inc. 2012\u20132017 . Retrieved  19 August  2017 . \u00a0 CS1 maint: Date format ( link ) \n ^   \"EMC Announces Retrospect 8.0 Backup and Recovery Software For Mac\" .  DellEMC [current] . EMC Corp. [orig. publisher]. 6 January 2009 . Retrieved  10 November  2016 . \u00a0 \n ^   \"Veritas NetBackup\u2122 Deduplication Guide\"   (PDF) .  Veritas . Veritas Technologies LLC (US). 2016. p.\u00a0171(Resilient network properties) . Retrieved  18 November  2017 . \u00a0 \n ^   Lardinois, Frederic (7 October 2015).  \"Amazon Launches Snowball, A Rugged Storage Appliance For Importing Data To AWS By FedEx\" .  TechCrunch . Oath Inc . Retrieved  15 November  2017 . \u00a0 \n ^   Rouse, Margaret (December 2011).  \"Definition: cloud seeding\" .  TechTarget . Tech Target Inc . Retrieved  16 November  2017 . \u00a0 \n ^   \"Changing paths Cloud Mac\"   (Video) .  YouTube . Retrospect Inc. 29 February 2016 . Retrieved  7 October  2016 . \u00a0 \n ^   Burton, Andrew (18 April 2013).  \"Analyzing recent developments in the backup software market\" .  TechTarget . Tech Target Inc . Retrieved  15 November  2017 . \u00a0 \n External links [ edit ] \n Look up  back up  in Wiktionary, the free dictionary. \n Look up  backup  in Wiktionary, the free dictionary. \n Wikimedia Commons has media related to  Backup . \n\t\t\t\t\t\tRetrieved from \" https://en.wikipedia.org/w/index.php?title=Backup&oldid=812053912 \"\t\t\t\t\t \n Categories :  Data security Backup Hidden categories:  CS1 German-language sources (de) CS1 maint: Date format Use dmy dates from July 2013 All articles with unsourced statements Articles with unsourced statements from July 2010 Articles needing additional references from September 2014 All articles needing additional references Wikipedia articles needing clarification from August 2013   \n Navigation menu \n Personal tools \n Not logged in Talk Contributions Create account Log in   \n Namespaces \n Article Talk   \n Variants \n Views \n Read Edit View history   \n More \n Search \n Navigation \n Main page Contents Featured content Current events Random article Donate to Wikipedia Wikipedia store   \n Interaction \n Help About Wikipedia Community portal Recent changes Contact page   \n Tools \n What links here Related changes Upload file Special pages Permanent link Page information Wikidata item Cite this page   \n Print/export \n Create a book Download as PDF Printable version   \n In other projects \n Wikimedia Commons   \n Languages \n Afrikaans \u0627\u0644\u0639\u0631\u0628\u064a\u0629 Az\u0259rbaycanca Bosanski Catal\u00e0 \u010ce\u0161tina Dansk Deutsch Eesti \u0395\u03bb\u03bb\u03b7\u03bd\u03b9\u03ba\u03ac Espa\u00f1ol Esperanto Euskara \u0641\u0627\u0631\u0633\u06cc Fran\u00e7ais \ud55c\uad6d\uc5b4 \u0540\u0561\u0575\u0565\u0580\u0565\u0576 \u0939\u093f\u0928\u094d\u0926\u0940 Hrvatski Bahasa Indonesia Italiano \u05e2\u05d1\u05e8\u05d9\u05ea \u0c95\u0ca8\u0ccd\u0ca8\u0ca1 L\u00ebtzebuergesch Magyar \u041c\u043e\u043d\u0433\u043e\u043b Nederlands \u65e5\u672c\u8a9e Norsk Norsk nynorsk Polski Portugu\u00eas \u0420\u0443\u0441\u0441\u043a\u0438\u0439 Shqip Simple English Sloven\u010dina Sloven\u0161\u010dina Suomi Svenska Tagalog \u0423\u043a\u0440\u0430\u0457\u043d\u0441\u044c\u043a\u0430 \u7cb5\u8a9e \u4e2d\u6587   \n Edit links   \n  This page was last edited on 25 November 2017, at 18:30. \n Text is available under the  Creative Commons Attribution-ShareAlike License ;\nadditional terms may apply.  By using this site, you agree to the  Terms of Use  and  Privacy Policy . Wikipedia\u00ae is a registered trademark of the  Wikimedia Foundation, Inc. , a non-profit organization. \n Privacy policy \n About Wikipedia \n Disclaimers \n Contact Wikipedia \n Developers \n Cookie statement \n Mobile view"}