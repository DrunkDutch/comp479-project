{"url": "http://www.w3.org/TR/2016/NOTE-WCAG20-TECHS-20161007/C15", "content": "C15: Using CSS to change the presentation of a user interface component when it receives focus | Techniques for WCAG 2.0\n               Techniques for WCAG 2.0 Skip to Content (Press Enter)   Contents Intro Previous:  \n        Technique C14 Next:  \n        Technique C17 On this page: Important Information about Techniques Applicability Description Examples Resources Tests -     C15: Using CSS to change the presentation of a user interface component when it receives focus Important Information about Techniques See  Understanding Techniques for WCAG Success Criteria  for important information about the usage of these informative techniques and how they relate to the normative WCAG 2.0 success criteria. The Applicability section explains the scope of the technique, and the presence of techniques for a specific technology does not imply that the technology can be used in all situations to create content that meets WCAG 2.0. Applicability CSS, HTML and XHTML This technique relates to: \n\t\t\t\tSuccess Criterion 1.4.1 (Use of Color) \n\t\t\t\t\t\tHow to Meet 1.4.1 (Use of Color)\n\t\t\t\t\t\tUnderstanding Success Criterion 1.4.1 (Use of Color)\n\t\t\t\tSuccess Criterion 2.4.7 (Focus Visible) \n\t\t\t\t\t\tHow to Meet 2.4.7 (Focus Visible)\n\t\t\t\t\t\tUnderstanding Success Criterion 2.4.7 (Focus Visible)\n\t\t\t\t\t  User Agent and Assistive Technology Support Notes See  User Agent Support Notes for C15 . Description The objective of this technique is to demonstrate how visual appearance may be enhanced via style sheets to provide visual feedback when an interactive element has focus or when a user hovers over it using a pointing device. Highlighting the element that has focus or is hovered over can provide information such as the fact that the element is interactive or the scope of the interactive element.  Providing visual feedback may be possible through more than one mode. Usually, it is attained through using a mouse to hover over the element or a keyboard to tab to the element.  Examples Example 1: Link elements In this example, mouse and keyboard focus indicators have been applied to the link elements. CSS has been used to apply a background color when the link elements receive focus.  Here is the content to be displayed: Example Code: \n<ul id=\"mainnav\">\n  <li class=\"page_item\">Home</li>\n  <li class=\"page_item\"><a href=\"/services\">Services</a></li>\n  <li class=\"page_item\"><a href=\"/projects\">Projects</a></li>\n  <li class=\"page_item\"><a href=\"/demos\">Demos</a></li>\n  <li class=\"page_item\"><a href=\"/about-us\">About us</a></li>\n  <li class=\"page_item\"><a href=\"/contact-us\">Contact us</a></li>\n  <li class=\"page_item\"><a href=\"/links\">Links</a></li>\n</ul> Here is the CSS that changes the background color for the above elements when they receive mouse or keyboard focus: Example Code: \n#mainnav a:hover, #mainnav a:active, #mainnav a:focus {\n  background-color: #DCFFFF;\n  color:#000066;\n} Example 2: Highlighting elements that receive focus In this example, the :focus pseudo-class is used to change the style applied to input fields when they receive focus by changing the background color.  Example Code: \n<html>\n  <head>\n    <style type=\"text/css\">\n      input.text:focus {\n        background-color: #7FFF00; \n        color: #000;\n      }\n      input[type=checkbox]:focus + label, input[type=radio]:focus + label {\n        background-color: #FF6; \n        color: #000; \n      }\n    </style>\n  </head>\n  <body>\n    <form method=\"post\" action=\"form.php\">\n      <p><label for=\"fname\">Name: </label>\n        <input class=\"text\" type=\"text\" name=\"fname\" id=\"fname\" />\n      </p>\n      <p>\n        <input type=\"radio\" name=\"sex\" value=\"male\" id=\"sm\" /> <label for=\"sm\">Male</label><br />\n        <input type=\"radio\" name=\"sex\" value=\"female\" id=\"sf\" /> <label for=\"sf\">Female</label>\n      <p>\n    </form>\n  </body>\n</html>\n             Working example of this code:  Example of highlighting elements that receive focus . Resources Resources are for information purposes only, no endorsement implied. \n CSS 2: 5.11.3 The dynamic pseudo-classes: :hover, :active, and :focus \n CSS 2: 5.7 Adjacent sibling selectors \n Tests Procedure For each element able to attain focus:  Using a mouse, hover over the element.  Check that the background or border changes color.  Move the mouse away from the object before attempting keyboard focus.  Using a keyboard, tab to the element. Check that the background or border changes color. Check that the background or border changes in color are removed when the element loses focus. Expected Results Checks #2, #5 and #6 are true. If this is a sufficient technique for a success criterion, failing this test procedure does not necessarily mean that the success criterion has not been satisfied in some other way, only that this technique has not been successfully implemented and can not be used to claim conformance. Top Contents Intro Previous:  \n        Technique C14 Next:  \n        Technique C17 This Web page is part of  Techniques and Failures for Web Content Accessibility Guidelines 2.0  (see the  latest version of this document ). The entire document is also available as a  single HTML file . See the  The WCAG 2.0 Documents  for an explanation of how this document fits in with other Web Content Accessibility Guidelines (WCAG) 2.0 documents. To send public comments, please follow the  Instructions for Commenting on WCAG 2.0 Documents .\n  Copyright  \u00a9 2016  W3C \u00ae  ( MIT ,  ERCIM ,  Keio ,  Beihang ). W3C  liability ,  trademark  and  document use  rules apply."}